// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`should match js config > test 1`] = `
{
  "default": {
    "env": {
      "es2021": true,
      "node": true,
    },
    "parserOptions": {
      "ecmaFeatures": {
        "jsx": true,
      },
      "ecmaVersion": "latest",
      "sourceType": "module",
    },
    "reportUnusedDisableDirectives": true,
    "rules": {
      "accessor-pairs": [
        "error",
        {
          "enforceForClassMembers": true,
        },
      ],
      "array-bracket-newline": [
        "error",
        "consistent",
      ],
      "array-bracket-spacing": [
        "error",
        "never",
      ],
      "array-callback-return": [
        "error",
        {
          "allowImplicit": true,
        },
      ],
      "array-element-newline": [
        "error",
        "consistent",
      ],
      "arrow-body-style": "error",
      "arrow-parens": [
        "error",
        "as-needed",
      ],
      "arrow-spacing": [
        "error",
        {
          "after": true,
          "before": true,
        },
      ],
      "block-scoped-var": "error",
      "brace-style": [
        "error",
        "1tbs",
        {
          "allowSingleLine": false,
        },
      ],
      "camelcase": [
        "error",
        {
          "properties": "always",
        },
      ],
      "capitalized-comments": [
        "error",
        "always",
        {
          "ignoreConsecutiveComments": true,
          "ignoreInlineComments": true,
          "ignorePattern": "pragma|ignore|prettier-ignore|webpack\\\\w+:|c8|type-coverage:",
        },
      ],
      "comma-dangle": [
        "error",
        "always-multiline",
      ],
      "comma-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "comma-style": [
        "error",
        "last",
      ],
      "complexity": "warn",
      "computed-property-spacing": [
        "error",
        "never",
        {
          "enforceForClassMembers": true,
        },
      ],
      "constructor-super": "error",
      "curly": "error",
      "default-case": "error",
      "default-case-last": "error",
      "dot-location": [
        "error",
        "property",
      ],
      "dot-notation": "error",
      "eol-last": "error",
      "eqeqeq": "error",
      "for-direction": "error",
      "func-call-spacing": [
        "error",
        "never",
      ],
      "func-name-matching": [
        "error",
        {
          "considerPropertyDescriptor": true,
        },
      ],
      "func-names": [
        "error",
        "never",
      ],
      "function-call-argument-newline": [
        "error",
        "consistent",
      ],
      "generator-star-spacing": [
        "error",
        "both",
      ],
      "getter-return": "error",
      "grouped-accessor-pairs": [
        "error",
        "getBeforeSet",
      ],
      "guard-for-in": "error",
      "indent": [
        "error",
        "tab",
        {
          "SwitchCase": 1,
        },
      ],
      "jsx-quotes": [
        "error",
        "prefer-single",
      ],
      "key-spacing": [
        "error",
        {
          "afterColon": true,
          "beforeColon": false,
        },
      ],
      "keyword-spacing": "error",
      "linebreak-style": [
        "error",
        "unix",
      ],
      "lines-between-class-members": [
        "error",
        "always",
        {
          "exceptAfterSingleLine": true,
        },
      ],
      "max-depth": "warn",
      "max-nested-callbacks": [
        "warn",
        4,
      ],
      "max-params": [
        "warn",
        {
          "max": 4,
        },
      ],
      "max-statements-per-line": "error",
      "new-cap": [
        "error",
        {
          "capIsNew": true,
          "newIsCap": true,
        },
      ],
      "new-parens": "error",
      "no-alert": "error",
      "no-array-constructor": "error",
      "no-async-promise-executor": "error",
      "no-await-in-loop": "error",
      "no-bitwise": "error",
      "no-buffer-constructor": "error",
      "no-caller": "error",
      "no-case-declarations": "error",
      "no-class-assign": "error",
      "no-compare-neg-zero": "error",
      "no-cond-assign": "error",
      "no-const-assign": "error",
      "no-constant-binary-expression": "error",
      "no-constant-condition": "error",
      "no-constructor-return": "error",
      "no-control-regex": "error",
      "no-debugger": "error",
      "no-delete-var": "error",
      "no-dupe-args": "error",
      "no-dupe-class-members": "error",
      "no-dupe-else-if": "error",
      "no-dupe-keys": "error",
      "no-duplicate-case": "error",
      "no-else-return": [
        "error",
        {
          "allowElseIf": false,
        },
      ],
      "no-empty": [
        "error",
        {
          "allowEmptyCatch": true,
        },
      ],
      "no-empty-character-class": "error",
      "no-empty-pattern": "error",
      "no-empty-static-block": "error",
      "no-eq-null": "error",
      "no-eval": "error",
      "no-ex-assign": "error",
      "no-extend-native": "error",
      "no-extra-bind": "error",
      "no-extra-boolean-cast": "error",
      "no-extra-label": "error",
      "no-extra-semi": "error",
      "no-fallthrough": "error",
      "no-floating-decimal": "error",
      "no-func-assign": "error",
      "no-global-assign": "error",
      "no-implicit-coercion": "error",
      "no-implicit-globals": "error",
      "no-implied-eval": "error",
      "no-import-assign": "error",
      "no-inner-declarations": "error",
      "no-invalid-regexp": "error",
      "no-irregular-whitespace": "error",
      "no-iterator": "error",
      "no-label-var": "error",
      "no-labels": "error",
      "no-lone-blocks": "error",
      "no-lonely-if": "error",
      "no-loss-of-precision": "error",
      "no-misleading-character-class": "error",
      "no-mixed-operators": "error",
      "no-mixed-spaces-and-tabs": "error",
      "no-multi-assign": "error",
      "no-multi-spaces": "error",
      "no-multi-str": "error",
      "no-multiple-empty-lines": [
        "error",
        {
          "max": 1,
        },
      ],
      "no-negated-condition": "error",
      "no-new": "error",
      "no-new-func": "error",
      "no-new-native-nonconstructor": "error",
      "no-new-object": "error",
      "no-new-wrappers": "error",
      "no-nonoctal-decimal-escape": "error",
      "no-obj-calls": "error",
      "no-octal": "error",
      "no-octal-escape": "error",
      "no-promise-executor-return": "error",
      "no-proto": "error",
      "no-prototype-builtins": "error",
      "no-redeclare": "error",
      "no-regex-spaces": "error",
      "no-restricted-globals": [
        "error",
        "event",
      ],
      "no-restricted-imports": [
        "error",
        "domain",
        "freelist",
        "smalloc",
        "punycode",
        "sys",
        "querystring",
        "colors",
      ],
      "no-return-assign": [
        "error",
        "always",
      ],
      "no-return-await": "error",
      "no-script-url": "error",
      "no-self-assign": [
        "error",
        {
          "props": true,
        },
      ],
      "no-self-compare": "error",
      "no-sequences": "error",
      "no-setter-return": "error",
      "no-shadow-restricted-names": "error",
      "no-sparse-arrays": "error",
      "no-template-curly-in-string": "error",
      "no-this-before-super": "error",
      "no-throw-literal": "error",
      "no-trailing-spaces": "error",
      "no-undef": [
        "error",
        {
          "typeof": true,
        },
      ],
      "no-undef-init": "error",
      "no-unexpected-multiline": "error",
      "no-unmodified-loop-condition": "error",
      "no-unneeded-ternary": "error",
      "no-unreachable": "error",
      "no-unreachable-loop": "error",
      "no-unsafe-finally": "error",
      "no-unsafe-negation": [
        "error",
        {
          "enforceForOrderingRelations": true,
        },
      ],
      "no-unsafe-optional-chaining": [
        "error",
        {
          "disallowArithmeticOperators": true,
        },
      ],
      "no-unused-expressions": [
        "error",
        {
          "enforceForJSX": true,
        },
      ],
      "no-unused-labels": "error",
      "no-unused-vars": [
        "error",
        {
          "args": "after-used",
          "argsIgnorePattern": "^_",
          "caughtErrors": "all",
          "caughtErrorsIgnorePattern": "^_$",
          "ignoreRestSiblings": true,
          "vars": "all",
        },
      ],
      "no-useless-backreference": "error",
      "no-useless-call": "error",
      "no-useless-catch": "error",
      "no-useless-computed-key": [
        "error",
        {
          "enforceForClassMembers": true,
        },
      ],
      "no-useless-concat": "error",
      "no-useless-constructor": "error",
      "no-useless-escape": "error",
      "no-useless-rename": "error",
      "no-useless-return": "error",
      "no-var": "error",
      "no-void": "error",
      "no-warning-comments": "warn",
      "no-whitespace-before-property": "error",
      "no-with": "error",
      "object-curly-spacing": [
        "error",
        "never",
      ],
      "object-shorthand": [
        "error",
        "always",
        {
          "avoidExplicitReturnArrows": true,
        },
      ],
      "one-var": [
        "error",
        "never",
      ],
      "one-var-declaration-per-line": "error",
      "operator-assignment": [
        "error",
        "always",
      ],
      "operator-linebreak": [
        "error",
        "before",
      ],
      "padded-blocks": [
        "error",
        "never",
        {
          "allowSingleLineBlocks": false,
        },
      ],
      "padding-line-between-statements": [
        "error",
        {
          "blankLine": "always",
          "next": "*",
          "prev": "multiline-block-like",
        },
      ],
      "prefer-arrow-callback": [
        "error",
        {
          "allowNamedFunctions": true,
        },
      ],
      "prefer-const": [
        "error",
        {
          "destructuring": "all",
        },
      ],
      "prefer-destructuring": [
        "error",
        {
          "AssignmentExpression": {
            "array": false,
            "object": false,
          },
          "VariableDeclarator": {
            "array": false,
            "object": true,
          },
        },
        {
          "enforceForRenamedProperties": false,
        },
      ],
      "prefer-exponentiation-operator": "error",
      "prefer-numeric-literals": "error",
      "prefer-object-spread": "error",
      "prefer-promise-reject-errors": [
        "error",
        {
          "allowEmptyReject": true,
        },
      ],
      "prefer-regex-literals": [
        "error",
        {
          "disallowRedundantWrapping": true,
        },
      ],
      "prefer-rest-params": "error",
      "prefer-spread": "error",
      "quote-props": [
        "error",
        "as-needed",
      ],
      "quotes": [
        "error",
        "single",
      ],
      "radix": "error",
      "require-yield": "error",
      "rest-spread-spacing": [
        "error",
        "never",
      ],
      "semi": [
        "error",
        "always",
      ],
      "semi-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "semi-style": [
        "error",
        "last",
      ],
      "space-before-blocks": [
        "error",
        "always",
      ],
      "space-before-function-paren": [
        "error",
        {
          "anonymous": "always",
          "asyncArrow": "always",
          "named": "never",
        },
      ],
      "space-in-parens": [
        "error",
        "never",
      ],
      "space-infix-ops": "error",
      "space-unary-ops": "error",
      "spaced-comment": [
        "error",
        "always",
        {
          "block": {
            "balanced": true,
            "exceptions": [
              "-",
              "+",
              "*",
            ],
            "markers": [
              "!",
              "*",
            ],
          },
          "line": {
            "exceptions": [
              "-",
              "+",
              "*",
            ],
            "markers": [
              "!",
              "/",
              "=>",
            ],
          },
        },
      ],
      "switch-colon-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "symbol-description": "error",
      "template-curly-spacing": "error",
      "template-tag-spacing": [
        "error",
        "never",
      ],
      "unicode-bom": [
        "error",
        "never",
      ],
      "use-isnan": "error",
      "valid-typeof": [
        "error",
        {
          "requireStringLiterals": false,
        },
      ],
      "wrap-iife": [
        "error",
        "inside",
        {
          "functionPrototypeMethods": true,
        },
      ],
      "yield-star-spacing": [
        "error",
        "both",
      ],
      "yoda": "error",
    },
  },
  "env": {
    "es2021": true,
    "node": true,
  },
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true,
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
  },
  "reportUnusedDisableDirectives": true,
  "rules": {
    "accessor-pairs": [
      "error",
      {
        "enforceForClassMembers": true,
      },
    ],
    "array-bracket-newline": [
      "error",
      "consistent",
    ],
    "array-bracket-spacing": [
      "error",
      "never",
    ],
    "array-callback-return": [
      "error",
      {
        "allowImplicit": true,
      },
    ],
    "array-element-newline": [
      "error",
      "consistent",
    ],
    "arrow-body-style": "error",
    "arrow-parens": [
      "error",
      "as-needed",
    ],
    "arrow-spacing": [
      "error",
      {
        "after": true,
        "before": true,
      },
    ],
    "block-scoped-var": "error",
    "brace-style": [
      "error",
      "1tbs",
      {
        "allowSingleLine": false,
      },
    ],
    "camelcase": [
      "error",
      {
        "properties": "always",
      },
    ],
    "capitalized-comments": [
      "error",
      "always",
      {
        "ignoreConsecutiveComments": true,
        "ignoreInlineComments": true,
        "ignorePattern": "pragma|ignore|prettier-ignore|webpack\\\\w+:|c8|type-coverage:",
      },
    ],
    "comma-dangle": [
      "error",
      "always-multiline",
    ],
    "comma-spacing": [
      "error",
      {
        "after": true,
        "before": false,
      },
    ],
    "comma-style": [
      "error",
      "last",
    ],
    "complexity": "warn",
    "computed-property-spacing": [
      "error",
      "never",
      {
        "enforceForClassMembers": true,
      },
    ],
    "constructor-super": "error",
    "curly": "error",
    "default-case": "error",
    "default-case-last": "error",
    "dot-location": [
      "error",
      "property",
    ],
    "dot-notation": "error",
    "eol-last": "error",
    "eqeqeq": "error",
    "for-direction": "error",
    "func-call-spacing": [
      "error",
      "never",
    ],
    "func-name-matching": [
      "error",
      {
        "considerPropertyDescriptor": true,
      },
    ],
    "func-names": [
      "error",
      "never",
    ],
    "function-call-argument-newline": [
      "error",
      "consistent",
    ],
    "generator-star-spacing": [
      "error",
      "both",
    ],
    "getter-return": "error",
    "grouped-accessor-pairs": [
      "error",
      "getBeforeSet",
    ],
    "guard-for-in": "error",
    "indent": [
      "error",
      "tab",
      {
        "SwitchCase": 1,
      },
    ],
    "jsx-quotes": [
      "error",
      "prefer-single",
    ],
    "key-spacing": [
      "error",
      {
        "afterColon": true,
        "beforeColon": false,
      },
    ],
    "keyword-spacing": "error",
    "linebreak-style": [
      "error",
      "unix",
    ],
    "lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true,
      },
    ],
    "max-depth": "warn",
    "max-nested-callbacks": [
      "warn",
      4,
    ],
    "max-params": [
      "warn",
      {
        "max": 4,
      },
    ],
    "max-statements-per-line": "error",
    "new-cap": [
      "error",
      {
        "capIsNew": true,
        "newIsCap": true,
      },
    ],
    "new-parens": "error",
    "no-alert": "error",
    "no-array-constructor": "error",
    "no-async-promise-executor": "error",
    "no-await-in-loop": "error",
    "no-bitwise": "error",
    "no-buffer-constructor": "error",
    "no-caller": "error",
    "no-case-declarations": "error",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-const-assign": "error",
    "no-constant-binary-expression": "error",
    "no-constant-condition": "error",
    "no-constructor-return": "error",
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-dupe-args": "error",
    "no-dupe-class-members": "error",
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-else-return": [
      "error",
      {
        "allowElseIf": false,
      },
    ],
    "no-empty": [
      "error",
      {
        "allowEmptyCatch": true,
      },
    ],
    "no-empty-character-class": "error",
    "no-empty-pattern": "error",
    "no-empty-static-block": "error",
    "no-eq-null": "error",
    "no-eval": "error",
    "no-ex-assign": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-boolean-cast": "error",
    "no-extra-label": "error",
    "no-extra-semi": "error",
    "no-fallthrough": "error",
    "no-floating-decimal": "error",
    "no-func-assign": "error",
    "no-global-assign": "error",
    "no-implicit-coercion": "error",
    "no-implicit-globals": "error",
    "no-implied-eval": "error",
    "no-import-assign": "error",
    "no-inner-declarations": "error",
    "no-invalid-regexp": "error",
    "no-irregular-whitespace": "error",
    "no-iterator": "error",
    "no-label-var": "error",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-lonely-if": "error",
    "no-loss-of-precision": "error",
    "no-misleading-character-class": "error",
    "no-mixed-operators": "error",
    "no-mixed-spaces-and-tabs": "error",
    "no-multi-assign": "error",
    "no-multi-spaces": "error",
    "no-multi-str": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1,
      },
    ],
    "no-negated-condition": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-native-nonconstructor": "error",
    "no-new-object": "error",
    "no-new-wrappers": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-obj-calls": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-promise-executor-return": "error",
    "no-proto": "error",
    "no-prototype-builtins": "error",
    "no-redeclare": "error",
    "no-regex-spaces": "error",
    "no-restricted-globals": [
      "error",
      "event",
    ],
    "no-restricted-imports": [
      "error",
      "domain",
      "freelist",
      "smalloc",
      "punycode",
      "sys",
      "querystring",
      "colors",
    ],
    "no-return-assign": [
      "error",
      "always",
    ],
    "no-return-await": "error",
    "no-script-url": "error",
    "no-self-assign": [
      "error",
      {
        "props": true,
      },
    ],
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-setter-return": "error",
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "error",
    "no-this-before-super": "error",
    "no-throw-literal": "error",
    "no-trailing-spaces": "error",
    "no-undef": [
      "error",
      {
        "typeof": true,
      },
    ],
    "no-undef-init": "error",
    "no-unexpected-multiline": "error",
    "no-unmodified-loop-condition": "error",
    "no-unneeded-ternary": "error",
    "no-unreachable": "error",
    "no-unreachable-loop": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": [
      "error",
      {
        "enforceForOrderingRelations": true,
      },
    ],
    "no-unsafe-optional-chaining": [
      "error",
      {
        "disallowArithmeticOperators": true,
      },
    ],
    "no-unused-expressions": [
      "error",
      {
        "enforceForJSX": true,
      },
    ],
    "no-unused-labels": "error",
    "no-unused-vars": [
      "error",
      {
        "args": "after-used",
        "argsIgnorePattern": "^_",
        "caughtErrors": "all",
        "caughtErrorsIgnorePattern": "^_$",
        "ignoreRestSiblings": true,
        "vars": "all",
      },
    ],
    "no-useless-backreference": "error",
    "no-useless-call": "error",
    "no-useless-catch": "error",
    "no-useless-computed-key": [
      "error",
      {
        "enforceForClassMembers": true,
      },
    ],
    "no-useless-concat": "error",
    "no-useless-constructor": "error",
    "no-useless-escape": "error",
    "no-useless-rename": "error",
    "no-useless-return": "error",
    "no-var": "error",
    "no-void": "error",
    "no-warning-comments": "warn",
    "no-whitespace-before-property": "error",
    "no-with": "error",
    "object-curly-spacing": [
      "error",
      "never",
    ],
    "object-shorthand": [
      "error",
      "always",
      {
        "avoidExplicitReturnArrows": true,
      },
    ],
    "one-var": [
      "error",
      "never",
    ],
    "one-var-declaration-per-line": "error",
    "operator-assignment": [
      "error",
      "always",
    ],
    "operator-linebreak": [
      "error",
      "before",
    ],
    "padded-blocks": [
      "error",
      "never",
      {
        "allowSingleLineBlocks": false,
      },
    ],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "next": "*",
        "prev": "multiline-block-like",
      },
    ],
    "prefer-arrow-callback": [
      "error",
      {
        "allowNamedFunctions": true,
      },
    ],
    "prefer-const": [
      "error",
      {
        "destructuring": "all",
      },
    ],
    "prefer-destructuring": [
      "error",
      {
        "AssignmentExpression": {
          "array": false,
          "object": false,
        },
        "VariableDeclarator": {
          "array": false,
          "object": true,
        },
      },
      {
        "enforceForRenamedProperties": false,
      },
    ],
    "prefer-exponentiation-operator": "error",
    "prefer-numeric-literals": "error",
    "prefer-object-spread": "error",
    "prefer-promise-reject-errors": [
      "error",
      {
        "allowEmptyReject": true,
      },
    ],
    "prefer-regex-literals": [
      "error",
      {
        "disallowRedundantWrapping": true,
      },
    ],
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "quote-props": [
      "error",
      "as-needed",
    ],
    "quotes": [
      "error",
      "single",
    ],
    "radix": "error",
    "require-yield": "error",
    "rest-spread-spacing": [
      "error",
      "never",
    ],
    "semi": [
      "error",
      "always",
    ],
    "semi-spacing": [
      "error",
      {
        "after": true,
        "before": false,
      },
    ],
    "semi-style": [
      "error",
      "last",
    ],
    "space-before-blocks": [
      "error",
      "always",
    ],
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "asyncArrow": "always",
        "named": "never",
      },
    ],
    "space-in-parens": [
      "error",
      "never",
    ],
    "space-infix-ops": "error",
    "space-unary-ops": "error",
    "spaced-comment": [
      "error",
      "always",
      {
        "block": {
          "balanced": true,
          "exceptions": [
            "-",
            "+",
            "*",
          ],
          "markers": [
            "!",
            "*",
          ],
        },
        "line": {
          "exceptions": [
            "-",
            "+",
            "*",
          ],
          "markers": [
            "!",
            "/",
            "=>",
          ],
        },
      },
    ],
    "switch-colon-spacing": [
      "error",
      {
        "after": true,
        "before": false,
      },
    ],
    "symbol-description": "error",
    "template-curly-spacing": "error",
    "template-tag-spacing": [
      "error",
      "never",
    ],
    "unicode-bom": [
      "error",
      "never",
    ],
    "use-isnan": "error",
    "valid-typeof": [
      "error",
      {
        "requireStringLiterals": false,
      },
    ],
    "wrap-iife": [
      "error",
      "inside",
      {
        "functionPrototypeMethods": true,
      },
    ],
    "yield-star-spacing": [
      "error",
      "both",
    ],
    "yoda": "error",
  },
}
`;

exports[`should match jsx config > test 1`] = `
{
  "default": {
    "env": {
      "es2021": true,
      "node": true,
    },
    "parserOptions": {
      "ecmaFeatures": {
        "jsx": true,
      },
      "ecmaVersion": "latest",
      "sourceType": "module",
    },
    "plugins": [
      "react",
      "react-hooks",
    ],
    "reportUnusedDisableDirectives": true,
    "rules": {
      "accessor-pairs": [
        "error",
        {
          "enforceForClassMembers": true,
        },
      ],
      "array-bracket-newline": [
        "error",
        "consistent",
      ],
      "array-bracket-spacing": [
        "error",
        "never",
      ],
      "array-callback-return": [
        "error",
        {
          "allowImplicit": true,
        },
      ],
      "array-element-newline": [
        "error",
        "consistent",
      ],
      "arrow-body-style": "error",
      "arrow-parens": [
        "error",
        "as-needed",
      ],
      "arrow-spacing": [
        "error",
        {
          "after": true,
          "before": true,
        },
      ],
      "block-scoped-var": "error",
      "brace-style": [
        "error",
        "1tbs",
        {
          "allowSingleLine": false,
        },
      ],
      "camelcase": [
        "error",
        {
          "properties": "always",
        },
      ],
      "capitalized-comments": [
        "error",
        "always",
        {
          "ignoreConsecutiveComments": true,
          "ignoreInlineComments": true,
          "ignorePattern": "pragma|ignore|prettier-ignore|webpack\\\\w+:|c8|type-coverage:",
        },
      ],
      "comma-dangle": [
        "error",
        "always-multiline",
      ],
      "comma-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "comma-style": [
        "error",
        "last",
      ],
      "complexity": "warn",
      "computed-property-spacing": [
        "error",
        "never",
        {
          "enforceForClassMembers": true,
        },
      ],
      "constructor-super": "error",
      "curly": "error",
      "default-case": "error",
      "default-case-last": "error",
      "dot-location": [
        "error",
        "property",
      ],
      "dot-notation": "error",
      "eol-last": "error",
      "eqeqeq": "error",
      "for-direction": "error",
      "func-call-spacing": [
        "error",
        "never",
      ],
      "func-name-matching": [
        "error",
        {
          "considerPropertyDescriptor": true,
        },
      ],
      "func-names": [
        "error",
        "never",
      ],
      "function-call-argument-newline": [
        "error",
        "consistent",
      ],
      "generator-star-spacing": [
        "error",
        "both",
      ],
      "getter-return": "error",
      "grouped-accessor-pairs": [
        "error",
        "getBeforeSet",
      ],
      "guard-for-in": "error",
      "indent": [
        "error",
        "tab",
        {
          "SwitchCase": 1,
        },
      ],
      "jsx-quotes": [
        "error",
        "prefer-single",
      ],
      "key-spacing": [
        "error",
        {
          "afterColon": true,
          "beforeColon": false,
        },
      ],
      "keyword-spacing": "error",
      "linebreak-style": [
        "error",
        "unix",
      ],
      "lines-between-class-members": [
        "error",
        "always",
        {
          "exceptAfterSingleLine": true,
        },
      ],
      "max-depth": "warn",
      "max-nested-callbacks": [
        "warn",
        4,
      ],
      "max-params": [
        "warn",
        {
          "max": 4,
        },
      ],
      "max-statements-per-line": "error",
      "new-cap": [
        "error",
        {
          "capIsNew": true,
          "newIsCap": true,
        },
      ],
      "new-parens": "error",
      "no-alert": "error",
      "no-array-constructor": "error",
      "no-async-promise-executor": "error",
      "no-await-in-loop": "error",
      "no-bitwise": "error",
      "no-buffer-constructor": "error",
      "no-caller": "error",
      "no-case-declarations": "error",
      "no-class-assign": "error",
      "no-compare-neg-zero": "error",
      "no-cond-assign": "error",
      "no-const-assign": "error",
      "no-constant-binary-expression": "error",
      "no-constant-condition": "error",
      "no-constructor-return": "error",
      "no-control-regex": "error",
      "no-debugger": "error",
      "no-delete-var": "error",
      "no-dupe-args": "error",
      "no-dupe-class-members": "error",
      "no-dupe-else-if": "error",
      "no-dupe-keys": "error",
      "no-duplicate-case": "error",
      "no-else-return": [
        "error",
        {
          "allowElseIf": false,
        },
      ],
      "no-empty": [
        "error",
        {
          "allowEmptyCatch": true,
        },
      ],
      "no-empty-character-class": "error",
      "no-empty-pattern": "error",
      "no-empty-static-block": "error",
      "no-eq-null": "error",
      "no-eval": "error",
      "no-ex-assign": "error",
      "no-extend-native": "error",
      "no-extra-bind": "error",
      "no-extra-boolean-cast": "error",
      "no-extra-label": "error",
      "no-extra-semi": "error",
      "no-fallthrough": "error",
      "no-floating-decimal": "error",
      "no-func-assign": "error",
      "no-global-assign": "error",
      "no-implicit-coercion": "error",
      "no-implicit-globals": "error",
      "no-implied-eval": "error",
      "no-import-assign": "error",
      "no-inner-declarations": "error",
      "no-invalid-regexp": "error",
      "no-irregular-whitespace": "error",
      "no-iterator": "error",
      "no-label-var": "error",
      "no-labels": "error",
      "no-lone-blocks": "error",
      "no-lonely-if": "error",
      "no-loss-of-precision": "error",
      "no-misleading-character-class": "error",
      "no-mixed-operators": "error",
      "no-mixed-spaces-and-tabs": "error",
      "no-multi-assign": "error",
      "no-multi-spaces": "error",
      "no-multi-str": "error",
      "no-multiple-empty-lines": [
        "error",
        {
          "max": 1,
        },
      ],
      "no-negated-condition": "error",
      "no-new": "error",
      "no-new-func": "error",
      "no-new-native-nonconstructor": "error",
      "no-new-object": "error",
      "no-new-wrappers": "error",
      "no-nonoctal-decimal-escape": "error",
      "no-obj-calls": "error",
      "no-octal": "error",
      "no-octal-escape": "error",
      "no-promise-executor-return": "error",
      "no-proto": "error",
      "no-prototype-builtins": "error",
      "no-redeclare": "error",
      "no-regex-spaces": "error",
      "no-restricted-globals": [
        "error",
        "event",
      ],
      "no-restricted-imports": [
        "error",
        "domain",
        "freelist",
        "smalloc",
        "punycode",
        "sys",
        "querystring",
        "colors",
      ],
      "no-return-assign": [
        "error",
        "always",
      ],
      "no-return-await": "error",
      "no-script-url": "error",
      "no-self-assign": [
        "error",
        {
          "props": true,
        },
      ],
      "no-self-compare": "error",
      "no-sequences": "error",
      "no-setter-return": "error",
      "no-shadow-restricted-names": "error",
      "no-sparse-arrays": "error",
      "no-template-curly-in-string": "error",
      "no-this-before-super": "error",
      "no-throw-literal": "error",
      "no-trailing-spaces": "error",
      "no-undef": [
        "error",
        {
          "typeof": true,
        },
      ],
      "no-undef-init": "error",
      "no-unexpected-multiline": "error",
      "no-unmodified-loop-condition": "error",
      "no-unneeded-ternary": "error",
      "no-unreachable": "error",
      "no-unreachable-loop": "error",
      "no-unsafe-finally": "error",
      "no-unsafe-negation": [
        "error",
        {
          "enforceForOrderingRelations": true,
        },
      ],
      "no-unsafe-optional-chaining": [
        "error",
        {
          "disallowArithmeticOperators": true,
        },
      ],
      "no-unused-expressions": [
        "error",
        {
          "enforceForJSX": true,
        },
      ],
      "no-unused-labels": "error",
      "no-unused-vars": [
        "error",
        {
          "args": "after-used",
          "argsIgnorePattern": "^_",
          "caughtErrors": "all",
          "caughtErrorsIgnorePattern": "^_$",
          "ignoreRestSiblings": true,
          "vars": "all",
        },
      ],
      "no-useless-backreference": "error",
      "no-useless-call": "error",
      "no-useless-catch": "error",
      "no-useless-computed-key": [
        "error",
        {
          "enforceForClassMembers": true,
        },
      ],
      "no-useless-concat": "error",
      "no-useless-constructor": "error",
      "no-useless-escape": "error",
      "no-useless-rename": "error",
      "no-useless-return": "error",
      "no-var": "error",
      "no-void": "error",
      "no-warning-comments": "warn",
      "no-whitespace-before-property": "error",
      "no-with": "error",
      "object-curly-spacing": [
        "error",
        "never",
      ],
      "object-shorthand": [
        "error",
        "always",
        {
          "avoidExplicitReturnArrows": true,
        },
      ],
      "one-var": [
        "error",
        "never",
      ],
      "one-var-declaration-per-line": "error",
      "operator-assignment": [
        "error",
        "always",
      ],
      "operator-linebreak": [
        "error",
        "before",
      ],
      "padded-blocks": [
        "error",
        "never",
        {
          "allowSingleLineBlocks": false,
        },
      ],
      "padding-line-between-statements": [
        "error",
        {
          "blankLine": "always",
          "next": "*",
          "prev": "multiline-block-like",
        },
      ],
      "prefer-arrow-callback": [
        "error",
        {
          "allowNamedFunctions": true,
        },
      ],
      "prefer-const": [
        "error",
        {
          "destructuring": "all",
        },
      ],
      "prefer-destructuring": [
        "error",
        {
          "AssignmentExpression": {
            "array": false,
            "object": false,
          },
          "VariableDeclarator": {
            "array": false,
            "object": true,
          },
        },
        {
          "enforceForRenamedProperties": false,
        },
      ],
      "prefer-exponentiation-operator": "error",
      "prefer-numeric-literals": "error",
      "prefer-object-spread": "error",
      "prefer-promise-reject-errors": [
        "error",
        {
          "allowEmptyReject": true,
        },
      ],
      "prefer-regex-literals": [
        "error",
        {
          "disallowRedundantWrapping": true,
        },
      ],
      "prefer-rest-params": "error",
      "prefer-spread": "error",
      "quote-props": [
        "error",
        "as-needed",
      ],
      "quotes": [
        "error",
        "single",
      ],
      "radix": "error",
      "react-hooks/exhaustive-deps": "warn",
      "react-hooks/rules-of-hooks": "error",
      "react/boolean-prop-naming": [
        "error",
        {
          "validateNested": true,
        },
      ],
      "react/button-has-type": "error",
      "react/default-props-match-prop-types": "error",
      "react/function-component-definition": [
        "error",
        {
          "namedComponents": "function-declaration",
          "unnamedComponents": "arrow-function",
        },
      ],
      "react/hook-use-state": "error",
      "react/iframe-missing-sandbox": "error",
      "react/jsx-boolean-value": "error",
      "react/jsx-child-element-spacing": "error",
      "react/jsx-closing-bracket-location": [
        "error",
        {
          "nonEmpty": "tag-aligned",
          "selfClosing": false,
        },
      ],
      "react/jsx-closing-tag-location": "error",
      "react/jsx-curly-brace-presence": [
        "error",
        {
          "children": "never",
          "propElementValues": "always",
          "props": "never",
        },
      ],
      "react/jsx-curly-newline": [
        "error",
        {
          "multiline": "consistent",
          "singleline": "forbid",
        },
      ],
      "react/jsx-curly-spacing": [
        "error",
        "never",
      ],
      "react/jsx-equals-spacing": [
        "error",
        "never",
      ],
      "react/jsx-first-prop-new-line": "error",
      "react/jsx-fragments": [
        "error",
        "syntax",
      ],
      "react/jsx-indent": [
        "error",
        "tab",
        {
          "checkAttributes": true,
          "indentLogicalExpressions": true,
        },
      ],
      "react/jsx-indent-props": [
        "error",
        "tab",
      ],
      "react/jsx-key": [
        "error",
        {
          "checkFragmentShorthand": true,
          "checkKeyMustBeforeSpread": true,
          "warnOnDuplicates": true,
        },
      ],
      "react/jsx-max-props-per-line": [
        "error",
        {
          "maximum": 3,
          "when": "multiline",
        },
      ],
      "react/jsx-no-bind": [
        "error",
        {
          "allowArrowFunctions": true,
        },
      ],
      "react/jsx-no-comment-textnodes": "error",
      "react/jsx-no-constructed-context-values": "error",
      "react/jsx-no-duplicate-props": [
        "error",
        {
          "ignoreCase": true,
        },
      ],
      "react/jsx-no-script-url": "error",
      "react/jsx-no-target-blank": [
        "error",
        {
          "forms": true,
          "warnOnSpreadAttributes": true,
        },
      ],
      "react/jsx-no-undef": "error",
      "react/jsx-no-useless-fragment": "error",
      "react/jsx-pascal-case": "error",
      "react/jsx-props-no-multi-spaces": "error",
      "react/jsx-sort-props": [
        "error",
        {
          "callbacksLast": true,
          "noSortAlphabetically": true,
          "reservedFirst": true,
          "shorthandFirst": true,
        },
      ],
      "react/jsx-tag-spacing": [
        "error",
        {
          "afterOpening": "never",
          "beforeClosing": "never",
          "beforeSelfClosing": "never",
          "closingSlash": "never",
        },
      ],
      "react/jsx-uses-react": "error",
      "react/jsx-uses-vars": "error",
      "react/jsx-wrap-multilines": [
        "error",
        {
          "arrow": "parens-new-line",
          "assignment": "parens-new-line",
          "condition": "ignore",
          "declaration": "parens-new-line",
          "logical": "ignore",
          "prop": "ignore",
          "return": "parens-new-line",
        },
      ],
      "react/no-access-state-in-setstate": "error",
      "react/no-array-index-key": "error",
      "react/no-arrow-function-lifecycle": "error",
      "react/no-children-prop": "error",
      "react/no-danger": "error",
      "react/no-danger-with-children": "error",
      "react/no-deprecated": "error",
      "react/no-did-update-set-state": "error",
      "react/no-direct-mutation-state": "error",
      "react/no-find-dom-node": "error",
      "react/no-invalid-html-attribute": "error",
      "react/no-is-mounted": "error",
      "react/no-namespace": "error",
      "react/no-redundant-should-component-update": "error",
      "react/no-render-return-value": "error",
      "react/no-string-refs": [
        "error",
        {
          "noTemplateLiterals": true,
        },
      ],
      "react/no-this-in-sfc": "error",
      "react/no-typos": "error",
      "react/no-unescaped-entities": "error",
      "react/no-unknown-property": "error",
      "react/no-unsafe": "error",
      "react/no-unused-prop-types": "error",
      "react/no-unused-state": "error",
      "react/prefer-read-only-props": "error",
      "react/prop-types": "error",
      "react/react-in-jsx-scope": "error",
      "react/require-default-props": [
        "error",
        {
          "forbidDefaultForRequired": true,
          "ignoreFunctionalComponents": true,
        },
      ],
      "react/self-closing-comp": "error",
      "react/state-in-constructor": [
        "error",
        "never",
      ],
      "react/static-property-placement": "error",
      "react/style-prop-object": [
        "error",
        {
          "allow": [
            "FormattedNumber",
          ],
        },
      ],
      "react/void-dom-elements-no-children": "error",
      "require-yield": "error",
      "rest-spread-spacing": [
        "error",
        "never",
      ],
      "semi": [
        "error",
        "always",
      ],
      "semi-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "semi-style": [
        "error",
        "last",
      ],
      "space-before-blocks": [
        "error",
        "always",
      ],
      "space-before-function-paren": [
        "error",
        {
          "anonymous": "always",
          "asyncArrow": "always",
          "named": "never",
        },
      ],
      "space-in-parens": [
        "error",
        "never",
      ],
      "space-infix-ops": "error",
      "space-unary-ops": "error",
      "spaced-comment": [
        "error",
        "always",
        {
          "block": {
            "balanced": true,
            "exceptions": [
              "-",
              "+",
              "*",
            ],
            "markers": [
              "!",
              "*",
            ],
          },
          "line": {
            "exceptions": [
              "-",
              "+",
              "*",
            ],
            "markers": [
              "!",
              "/",
              "=>",
            ],
          },
        },
      ],
      "switch-colon-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "symbol-description": "error",
      "template-curly-spacing": "error",
      "template-tag-spacing": [
        "error",
        "never",
      ],
      "unicode-bom": [
        "error",
        "never",
      ],
      "use-isnan": "error",
      "valid-typeof": [
        "error",
        {
          "requireStringLiterals": false,
        },
      ],
      "wrap-iife": [
        "error",
        "inside",
        {
          "functionPrototypeMethods": true,
        },
      ],
      "yield-star-spacing": [
        "error",
        "both",
      ],
      "yoda": "error",
    },
    "settings": {
      "react": {
        "version": "detect",
      },
    },
  },
  "env": {
    "es2021": true,
    "node": true,
  },
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true,
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
  ],
  "reportUnusedDisableDirectives": true,
  "rules": {
    "accessor-pairs": [
      "error",
      {
        "enforceForClassMembers": true,
      },
    ],
    "array-bracket-newline": [
      "error",
      "consistent",
    ],
    "array-bracket-spacing": [
      "error",
      "never",
    ],
    "array-callback-return": [
      "error",
      {
        "allowImplicit": true,
      },
    ],
    "array-element-newline": [
      "error",
      "consistent",
    ],
    "arrow-body-style": "error",
    "arrow-parens": [
      "error",
      "as-needed",
    ],
    "arrow-spacing": [
      "error",
      {
        "after": true,
        "before": true,
      },
    ],
    "block-scoped-var": "error",
    "brace-style": [
      "error",
      "1tbs",
      {
        "allowSingleLine": false,
      },
    ],
    "camelcase": [
      "error",
      {
        "properties": "always",
      },
    ],
    "capitalized-comments": [
      "error",
      "always",
      {
        "ignoreConsecutiveComments": true,
        "ignoreInlineComments": true,
        "ignorePattern": "pragma|ignore|prettier-ignore|webpack\\\\w+:|c8|type-coverage:",
      },
    ],
    "comma-dangle": [
      "error",
      "always-multiline",
    ],
    "comma-spacing": [
      "error",
      {
        "after": true,
        "before": false,
      },
    ],
    "comma-style": [
      "error",
      "last",
    ],
    "complexity": "warn",
    "computed-property-spacing": [
      "error",
      "never",
      {
        "enforceForClassMembers": true,
      },
    ],
    "constructor-super": "error",
    "curly": "error",
    "default-case": "error",
    "default-case-last": "error",
    "dot-location": [
      "error",
      "property",
    ],
    "dot-notation": "error",
    "eol-last": "error",
    "eqeqeq": "error",
    "for-direction": "error",
    "func-call-spacing": [
      "error",
      "never",
    ],
    "func-name-matching": [
      "error",
      {
        "considerPropertyDescriptor": true,
      },
    ],
    "func-names": [
      "error",
      "never",
    ],
    "function-call-argument-newline": [
      "error",
      "consistent",
    ],
    "generator-star-spacing": [
      "error",
      "both",
    ],
    "getter-return": "error",
    "grouped-accessor-pairs": [
      "error",
      "getBeforeSet",
    ],
    "guard-for-in": "error",
    "indent": [
      "error",
      "tab",
      {
        "SwitchCase": 1,
      },
    ],
    "jsx-quotes": [
      "error",
      "prefer-single",
    ],
    "key-spacing": [
      "error",
      {
        "afterColon": true,
        "beforeColon": false,
      },
    ],
    "keyword-spacing": "error",
    "linebreak-style": [
      "error",
      "unix",
    ],
    "lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true,
      },
    ],
    "max-depth": "warn",
    "max-nested-callbacks": [
      "warn",
      4,
    ],
    "max-params": [
      "warn",
      {
        "max": 4,
      },
    ],
    "max-statements-per-line": "error",
    "new-cap": [
      "error",
      {
        "capIsNew": true,
        "newIsCap": true,
      },
    ],
    "new-parens": "error",
    "no-alert": "error",
    "no-array-constructor": "error",
    "no-async-promise-executor": "error",
    "no-await-in-loop": "error",
    "no-bitwise": "error",
    "no-buffer-constructor": "error",
    "no-caller": "error",
    "no-case-declarations": "error",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-const-assign": "error",
    "no-constant-binary-expression": "error",
    "no-constant-condition": "error",
    "no-constructor-return": "error",
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-dupe-args": "error",
    "no-dupe-class-members": "error",
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-else-return": [
      "error",
      {
        "allowElseIf": false,
      },
    ],
    "no-empty": [
      "error",
      {
        "allowEmptyCatch": true,
      },
    ],
    "no-empty-character-class": "error",
    "no-empty-pattern": "error",
    "no-empty-static-block": "error",
    "no-eq-null": "error",
    "no-eval": "error",
    "no-ex-assign": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-boolean-cast": "error",
    "no-extra-label": "error",
    "no-extra-semi": "error",
    "no-fallthrough": "error",
    "no-floating-decimal": "error",
    "no-func-assign": "error",
    "no-global-assign": "error",
    "no-implicit-coercion": "error",
    "no-implicit-globals": "error",
    "no-implied-eval": "error",
    "no-import-assign": "error",
    "no-inner-declarations": "error",
    "no-invalid-regexp": "error",
    "no-irregular-whitespace": "error",
    "no-iterator": "error",
    "no-label-var": "error",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-lonely-if": "error",
    "no-loss-of-precision": "error",
    "no-misleading-character-class": "error",
    "no-mixed-operators": "error",
    "no-mixed-spaces-and-tabs": "error",
    "no-multi-assign": "error",
    "no-multi-spaces": "error",
    "no-multi-str": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1,
      },
    ],
    "no-negated-condition": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-native-nonconstructor": "error",
    "no-new-object": "error",
    "no-new-wrappers": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-obj-calls": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-promise-executor-return": "error",
    "no-proto": "error",
    "no-prototype-builtins": "error",
    "no-redeclare": "error",
    "no-regex-spaces": "error",
    "no-restricted-globals": [
      "error",
      "event",
    ],
    "no-restricted-imports": [
      "error",
      "domain",
      "freelist",
      "smalloc",
      "punycode",
      "sys",
      "querystring",
      "colors",
    ],
    "no-return-assign": [
      "error",
      "always",
    ],
    "no-return-await": "error",
    "no-script-url": "error",
    "no-self-assign": [
      "error",
      {
        "props": true,
      },
    ],
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-setter-return": "error",
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "error",
    "no-this-before-super": "error",
    "no-throw-literal": "error",
    "no-trailing-spaces": "error",
    "no-undef": [
      "error",
      {
        "typeof": true,
      },
    ],
    "no-undef-init": "error",
    "no-unexpected-multiline": "error",
    "no-unmodified-loop-condition": "error",
    "no-unneeded-ternary": "error",
    "no-unreachable": "error",
    "no-unreachable-loop": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": [
      "error",
      {
        "enforceForOrderingRelations": true,
      },
    ],
    "no-unsafe-optional-chaining": [
      "error",
      {
        "disallowArithmeticOperators": true,
      },
    ],
    "no-unused-expressions": [
      "error",
      {
        "enforceForJSX": true,
      },
    ],
    "no-unused-labels": "error",
    "no-unused-vars": [
      "error",
      {
        "args": "after-used",
        "argsIgnorePattern": "^_",
        "caughtErrors": "all",
        "caughtErrorsIgnorePattern": "^_$",
        "ignoreRestSiblings": true,
        "vars": "all",
      },
    ],
    "no-useless-backreference": "error",
    "no-useless-call": "error",
    "no-useless-catch": "error",
    "no-useless-computed-key": [
      "error",
      {
        "enforceForClassMembers": true,
      },
    ],
    "no-useless-concat": "error",
    "no-useless-constructor": "error",
    "no-useless-escape": "error",
    "no-useless-rename": "error",
    "no-useless-return": "error",
    "no-var": "error",
    "no-void": "error",
    "no-warning-comments": "warn",
    "no-whitespace-before-property": "error",
    "no-with": "error",
    "object-curly-spacing": [
      "error",
      "never",
    ],
    "object-shorthand": [
      "error",
      "always",
      {
        "avoidExplicitReturnArrows": true,
      },
    ],
    "one-var": [
      "error",
      "never",
    ],
    "one-var-declaration-per-line": "error",
    "operator-assignment": [
      "error",
      "always",
    ],
    "operator-linebreak": [
      "error",
      "before",
    ],
    "padded-blocks": [
      "error",
      "never",
      {
        "allowSingleLineBlocks": false,
      },
    ],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "next": "*",
        "prev": "multiline-block-like",
      },
    ],
    "prefer-arrow-callback": [
      "error",
      {
        "allowNamedFunctions": true,
      },
    ],
    "prefer-const": [
      "error",
      {
        "destructuring": "all",
      },
    ],
    "prefer-destructuring": [
      "error",
      {
        "AssignmentExpression": {
          "array": false,
          "object": false,
        },
        "VariableDeclarator": {
          "array": false,
          "object": true,
        },
      },
      {
        "enforceForRenamedProperties": false,
      },
    ],
    "prefer-exponentiation-operator": "error",
    "prefer-numeric-literals": "error",
    "prefer-object-spread": "error",
    "prefer-promise-reject-errors": [
      "error",
      {
        "allowEmptyReject": true,
      },
    ],
    "prefer-regex-literals": [
      "error",
      {
        "disallowRedundantWrapping": true,
      },
    ],
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "quote-props": [
      "error",
      "as-needed",
    ],
    "quotes": [
      "error",
      "single",
    ],
    "radix": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react-hooks/rules-of-hooks": "error",
    "react/boolean-prop-naming": [
      "error",
      {
        "validateNested": true,
      },
    ],
    "react/button-has-type": "error",
    "react/default-props-match-prop-types": "error",
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "function-declaration",
        "unnamedComponents": "arrow-function",
      },
    ],
    "react/hook-use-state": "error",
    "react/iframe-missing-sandbox": "error",
    "react/jsx-boolean-value": "error",
    "react/jsx-child-element-spacing": "error",
    "react/jsx-closing-bracket-location": [
      "error",
      {
        "nonEmpty": "tag-aligned",
        "selfClosing": false,
      },
    ],
    "react/jsx-closing-tag-location": "error",
    "react/jsx-curly-brace-presence": [
      "error",
      {
        "children": "never",
        "propElementValues": "always",
        "props": "never",
      },
    ],
    "react/jsx-curly-newline": [
      "error",
      {
        "multiline": "consistent",
        "singleline": "forbid",
      },
    ],
    "react/jsx-curly-spacing": [
      "error",
      "never",
    ],
    "react/jsx-equals-spacing": [
      "error",
      "never",
    ],
    "react/jsx-first-prop-new-line": "error",
    "react/jsx-fragments": [
      "error",
      "syntax",
    ],
    "react/jsx-indent": [
      "error",
      "tab",
      {
        "checkAttributes": true,
        "indentLogicalExpressions": true,
      },
    ],
    "react/jsx-indent-props": [
      "error",
      "tab",
    ],
    "react/jsx-key": [
      "error",
      {
        "checkFragmentShorthand": true,
        "checkKeyMustBeforeSpread": true,
        "warnOnDuplicates": true,
      },
    ],
    "react/jsx-max-props-per-line": [
      "error",
      {
        "maximum": 3,
        "when": "multiline",
      },
    ],
    "react/jsx-no-bind": [
      "error",
      {
        "allowArrowFunctions": true,
      },
    ],
    "react/jsx-no-comment-textnodes": "error",
    "react/jsx-no-constructed-context-values": "error",
    "react/jsx-no-duplicate-props": [
      "error",
      {
        "ignoreCase": true,
      },
    ],
    "react/jsx-no-script-url": "error",
    "react/jsx-no-target-blank": [
      "error",
      {
        "forms": true,
        "warnOnSpreadAttributes": true,
      },
    ],
    "react/jsx-no-undef": "error",
    "react/jsx-no-useless-fragment": "error",
    "react/jsx-pascal-case": "error",
    "react/jsx-props-no-multi-spaces": "error",
    "react/jsx-sort-props": [
      "error",
      {
        "callbacksLast": true,
        "noSortAlphabetically": true,
        "reservedFirst": true,
        "shorthandFirst": true,
      },
    ],
    "react/jsx-tag-spacing": [
      "error",
      {
        "afterOpening": "never",
        "beforeClosing": "never",
        "beforeSelfClosing": "never",
        "closingSlash": "never",
      },
    ],
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/jsx-wrap-multilines": [
      "error",
      {
        "arrow": "parens-new-line",
        "assignment": "parens-new-line",
        "condition": "ignore",
        "declaration": "parens-new-line",
        "logical": "ignore",
        "prop": "ignore",
        "return": "parens-new-line",
      },
    ],
    "react/no-access-state-in-setstate": "error",
    "react/no-array-index-key": "error",
    "react/no-arrow-function-lifecycle": "error",
    "react/no-children-prop": "error",
    "react/no-danger": "error",
    "react/no-danger-with-children": "error",
    "react/no-deprecated": "error",
    "react/no-did-update-set-state": "error",
    "react/no-direct-mutation-state": "error",
    "react/no-find-dom-node": "error",
    "react/no-invalid-html-attribute": "error",
    "react/no-is-mounted": "error",
    "react/no-namespace": "error",
    "react/no-redundant-should-component-update": "error",
    "react/no-render-return-value": "error",
    "react/no-string-refs": [
      "error",
      {
        "noTemplateLiterals": true,
      },
    ],
    "react/no-this-in-sfc": "error",
    "react/no-typos": "error",
    "react/no-unescaped-entities": "error",
    "react/no-unknown-property": "error",
    "react/no-unsafe": "error",
    "react/no-unused-prop-types": "error",
    "react/no-unused-state": "error",
    "react/prefer-read-only-props": "error",
    "react/prop-types": "error",
    "react/react-in-jsx-scope": "error",
    "react/require-default-props": [
      "error",
      {
        "forbidDefaultForRequired": true,
        "ignoreFunctionalComponents": true,
      },
    ],
    "react/self-closing-comp": "error",
    "react/state-in-constructor": [
      "error",
      "never",
    ],
    "react/static-property-placement": "error",
    "react/style-prop-object": [
      "error",
      {
        "allow": [
          "FormattedNumber",
        ],
      },
    ],
    "react/void-dom-elements-no-children": "error",
    "require-yield": "error",
    "rest-spread-spacing": [
      "error",
      "never",
    ],
    "semi": [
      "error",
      "always",
    ],
    "semi-spacing": [
      "error",
      {
        "after": true,
        "before": false,
      },
    ],
    "semi-style": [
      "error",
      "last",
    ],
    "space-before-blocks": [
      "error",
      "always",
    ],
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "asyncArrow": "always",
        "named": "never",
      },
    ],
    "space-in-parens": [
      "error",
      "never",
    ],
    "space-infix-ops": "error",
    "space-unary-ops": "error",
    "spaced-comment": [
      "error",
      "always",
      {
        "block": {
          "balanced": true,
          "exceptions": [
            "-",
            "+",
            "*",
          ],
          "markers": [
            "!",
            "*",
          ],
        },
        "line": {
          "exceptions": [
            "-",
            "+",
            "*",
          ],
          "markers": [
            "!",
            "/",
            "=>",
          ],
        },
      },
    ],
    "switch-colon-spacing": [
      "error",
      {
        "after": true,
        "before": false,
      },
    ],
    "symbol-description": "error",
    "template-curly-spacing": "error",
    "template-tag-spacing": [
      "error",
      "never",
    ],
    "unicode-bom": [
      "error",
      "never",
    ],
    "use-isnan": "error",
    "valid-typeof": [
      "error",
      {
        "requireStringLiterals": false,
      },
    ],
    "wrap-iife": [
      "error",
      "inside",
      {
        "functionPrototypeMethods": true,
      },
    ],
    "yield-star-spacing": [
      "error",
      "both",
    ],
    "yoda": "error",
  },
  "settings": {
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`should match ts config > test 1`] = `
{
  "default": {
    "env": {
      "es2021": true,
      "node": true,
    },
    "overrides": [
      {
        "files": [
          "*.ts",
          "*.tsx",
        ],
        "overrides": [
          {
            "files": [
              "**/*.d.ts",
            ],
            "rules": {
              "@typescript-eslint/no-unused-vars": "off",
            },
          },
          {
            "files": [
              "**/*.test-d.ts",
            ],
            "rules": {
              "@typescript-eslint/no-confusing-void-expression": "off",
              "@typescript-eslint/no-unsafe-call": "off",
            },
          },
          {
            "files": [
              "**/*.tsx",
            ],
            "rules": {
              "@typescript-eslint/naming-convention": [
                "error",
                {
                  "filter": {
                    "match": false,
                    "regex": "[- ]",
                  },
                  "format": [
                    "strictCamelCase",
                    "StrictPascalCase",
                  ],
                  "leadingUnderscore": "allowSingleOrDouble",
                  "selector": [
                    "variable",
                    "function",
                    "classProperty",
                    "objectLiteralProperty",
                    "parameterProperty",
                    "classMethod",
                    "objectLiteralMethod",
                    "typeMethod",
                    "accessor",
                  ],
                  "trailingUnderscore": "allow",
                },
                {
                  "format": [
                    "StrictPascalCase",
                  ],
                  "selector": "typeLike",
                },
                {
                  "format": [
                    "StrictPascalCase",
                  ],
                  "prefix": [
                    "is",
                    "has",
                    "can",
                    "should",
                    "will",
                    "did",
                  ],
                  "selector": "variable",
                  "types": [
                    "boolean",
                  ],
                },
                {
                  "filter": "^(?!I)[A-Z]",
                  "format": [
                    "StrictPascalCase",
                  ],
                  "selector": "interface",
                },
                {
                  "filter": "^T$|^[A-Z][a-zA-Z]+$",
                  "format": [
                    "StrictPascalCase",
                  ],
                  "selector": "typeParameter",
                },
                {
                  "format": null,
                  "modifiers": [
                    "requiresQuotes",
                  ],
                  "selector": [
                    "classProperty",
                    "objectLiteralProperty",
                  ],
                },
              ],
            },
          },
        ],
        "parser": "/Users/manaschimpidi/Code/hotcakes-core/node_modules/@typescript-eslint/parser/dist/index.js",
        "parserOptions": {
          "ecmaFeatures": {
            "jsx": true,
          },
          "project": "tsconfig.json",
          "sourceType": "module",
          "warnOnUnsupportedTypeScriptVersion": false,
        },
        "plugins": [
          "@typescript-eslint",
        ],
        "rules": {
          "@typescript-eslint/adjacent-overload-signatures": "error",
          "@typescript-eslint/array-type": [
            "error",
            {
              "default": "array-simple",
            },
          ],
          "@typescript-eslint/await-thenable": "error",
          "@typescript-eslint/ban-ts-comment": [
            "error",
            {
              "minimumDescriptionLength": 4,
              "ts-expect-error": "allow-with-description",
            },
          ],
          "@typescript-eslint/ban-tslint-comment": "error",
          "@typescript-eslint/ban-types": [
            "error",
            {
              "extendDefaults": false,
              "types": {
                "BigInt": {
                  "fixWith": "bigint",
                  "message": "Use \`bigint\` instead.",
                },
                "Boolean": {
                  "fixWith": "boolean",
                  "message": "Use \`boolean\` instead.",
                },
                "Function": "Use a specific function type instead, like \`() => void\`.",
                "Number": {
                  "fixWith": "number",
                  "message": "Use \`number\` instead.",
                },
                "Object": {
                  "fixWith": "Record<string, unknown>",
                  "message": "The \`Object\` type is mostly the same as \`unknown\`. You probably want \`Record<string, unknown>\` instead. See https://github.com/typescript-eslint/typescript-eslint/pull/848",
                },
                "String": {
                  "fixWith": "string",
                  "message": "Use \`string\` instead.",
                },
                "Symbol": {
                  "fixWith": "symbol",
                  "message": "Use \`symbol\` instead.",
                },
                "[[[[[]]]]]": "🦄💥",
                "[[[[]]]]": "ur drunk 🤡",
                "[[[]]]": "Don't use \`[[[]]]\`. Use \`SomeType[][][]\` instead.",
                "[[]]": "Don't use \`[[]]\`. It only allows an array with a single element which is an empty array. Use \`SomeType[][]\` instead.",
                "[]": "Don't use the empty array type \`[]\`. It only allows empty arrays. Use \`SomeType[]\` instead.",
                "null": {
                  "fixWith": "undefined",
                  "message": "Use \`undefined\` instead. See: https://github.com/sindresorhus/meta/issues/7",
                },
                "object": {
                  "fixWith": "Record<string, unknown>",
                  "message": "The \`object\` type is hard to use. Use \`Record<string, unknown>\` instead. See: https://github.com/typescript-eslint/typescript-eslint/pull/848",
                },
                "{}": {
                  "fixWith": "Record<string, unknown>",
                  "message": "The \`{}\` type is mostly the same as \`unknown\`. You probably want \`Record<string, unknown>\` instead.",
                },
              },
            },
          ],
          "@typescript-eslint/brace-style": [
            "error",
            "1tbs",
            {
              "allowSingleLine": false,
            },
          ],
          "@typescript-eslint/class-literal-property-style": [
            "error",
            "getters",
          ],
          "@typescript-eslint/comma-dangle": [
            "error",
            "always-multiline",
          ],
          "@typescript-eslint/comma-spacing": [
            "error",
            {
              "after": true,
              "before": false,
            },
          ],
          "@typescript-eslint/consistent-generic-constructors": [
            "error",
            "constructor",
          ],
          "@typescript-eslint/consistent-indexed-object-style": "error",
          "@typescript-eslint/consistent-type-assertions": [
            "error",
            {
              "assertionStyle": "as",
              "objectLiteralTypeAssertions": "allow-as-parameter",
            },
          ],
          "@typescript-eslint/consistent-type-definitions": [
            "error",
            "type",
          ],
          "@typescript-eslint/consistent-type-exports": [
            "error",
            {
              "fixMixedExportsWithInlineTypeSpecifier": true,
            },
          ],
          "@typescript-eslint/consistent-type-imports": [
            "error",
            {
              "fixStyle": "inline-type-imports",
            },
          ],
          "@typescript-eslint/default-param-last": "error",
          "@typescript-eslint/dot-notation": "error",
          "@typescript-eslint/func-call-spacing": [
            "error",
            "never",
          ],
          "@typescript-eslint/indent": [
            "error",
            "tab",
            {
              "SwitchCase": 1,
            },
          ],
          "@typescript-eslint/keyword-spacing": "error",
          "@typescript-eslint/lines-between-class-members": [
            "error",
            "always",
            {
              "exceptAfterSingleLine": true,
            },
          ],
          "@typescript-eslint/member-delimiter-style": [
            "error",
            {
              "multiline": {
                "delimiter": "semi",
                "requireLast": true,
              },
              "singleline": {
                "delimiter": "semi",
                "requireLast": false,
              },
            },
          ],
          "@typescript-eslint/member-ordering": [
            "error",
            {
              "default": [
                "signature",
                "public-static-field",
                "public-static-method",
                "protected-static-field",
                "protected-static-method",
                "private-static-field",
                "private-static-method",
                "static-field",
                "static-method",
                "public-decorated-field",
                "public-instance-field",
                "public-abstract-field",
                "public-field",
                "protected-decorated-field",
                "protected-instance-field",
                "protected-abstract-field",
                "protected-field",
                "private-decorated-field",
                "private-instance-field",
                "private-field",
                "instance-field",
                "abstract-field",
                "decorated-field",
                "field",
                "public-constructor",
                "protected-constructor",
                "private-constructor",
                "constructor",
                "public-decorated-method",
                "public-instance-method",
                "public-abstract-method",
                "public-method",
                "protected-decorated-method",
                "protected-instance-method",
                "protected-abstract-method",
                "protected-method",
                "private-decorated-method",
                "private-instance-method",
                "private-method",
                "instance-method",
                "abstract-method",
                "decorated-method",
                "method",
              ],
            },
          ],
          "@typescript-eslint/naming-convention": [
            "error",
            {
              "filter": {
                "match": false,
                "regex": "[- ]",
              },
              "format": [
                "strictCamelCase",
              ],
              "leadingUnderscore": "allowSingleOrDouble",
              "selector": [
                "variable",
                "function",
                "classProperty",
                "objectLiteralProperty",
                "parameterProperty",
                "classMethod",
                "objectLiteralMethod",
                "typeMethod",
                "accessor",
              ],
              "trailingUnderscore": "allow",
            },
            {
              "format": [
                "StrictPascalCase",
              ],
              "selector": "typeLike",
            },
            {
              "format": [
                "StrictPascalCase",
              ],
              "prefix": [
                "is",
                "has",
                "can",
                "should",
                "will",
                "did",
              ],
              "selector": "variable",
              "types": [
                "boolean",
              ],
            },
            {
              "filter": "^(?!I)[A-Z]",
              "format": [
                "StrictPascalCase",
              ],
              "selector": "interface",
            },
            {
              "filter": "^T$|^[A-Z][a-zA-Z]+$",
              "format": [
                "StrictPascalCase",
              ],
              "selector": "typeParameter",
            },
            {
              "format": null,
              "modifiers": [
                "requiresQuotes",
              ],
              "selector": [
                "classProperty",
                "objectLiteralProperty",
              ],
            },
          ],
          "@typescript-eslint/no-array-constructor": "error",
          "@typescript-eslint/no-base-to-string": "error",
          "@typescript-eslint/no-confusing-void-expression": "error",
          "@typescript-eslint/no-dupe-class-members": "error",
          "@typescript-eslint/no-duplicate-enum-values": "error",
          "@typescript-eslint/no-duplicate-type-constituents": "error",
          "@typescript-eslint/no-dynamic-delete": "error",
          "@typescript-eslint/no-empty-function": "error",
          "@typescript-eslint/no-empty-interface": [
            "error",
            {
              "allowSingleExtends": true,
            },
          ],
          "@typescript-eslint/no-extra-non-null-assertion": "error",
          "@typescript-eslint/no-extra-semi": "error",
          "@typescript-eslint/no-extraneous-class": [
            "error",
            {
              "allowConstructorOnly": false,
              "allowEmpty": false,
              "allowStaticOnly": false,
              "allowWithDecorator": true,
            },
          ],
          "@typescript-eslint/no-floating-promises": [
            "error",
            {
              "ignoreIIFE": true,
              "ignoreVoid": true,
            },
          ],
          "@typescript-eslint/no-for-in-array": "error",
          "@typescript-eslint/no-inferrable-types": "error",
          "@typescript-eslint/no-loop-func": "error",
          "@typescript-eslint/no-loss-of-precision": "error",
          "@typescript-eslint/no-meaningless-void-operator": "error",
          "@typescript-eslint/no-misused-new": "error",
          "@typescript-eslint/no-misused-promises": [
            "error",
            {
              "checksConditionals": true,
              "checksVoidReturn": false,
            },
          ],
          "@typescript-eslint/no-namespace": "error",
          "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
          "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
          "@typescript-eslint/no-redeclare": "error",
          "@typescript-eslint/no-require-imports": "error",
          "@typescript-eslint/no-restricted-imports": [
            "error",
            {
              "paths": [
                "error",
                "domain",
                "freelist",
                "smalloc",
                "punycode",
                "sys",
                "querystring",
                "colors",
              ],
            },
          ],
          "@typescript-eslint/no-this-alias": [
            "error",
            {
              "allowDestructuring": true,
            },
          ],
          "@typescript-eslint/no-throw-literal": [
            "error",
            {
              "allowThrowingAny": false,
              "allowThrowingUnknown": true,
            },
          ],
          "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
          "@typescript-eslint/no-unnecessary-qualifier": "error",
          "@typescript-eslint/no-unnecessary-type-arguments": "error",
          "@typescript-eslint/no-unnecessary-type-assertion": "error",
          "@typescript-eslint/no-unnecessary-type-constraint": "error",
          "@typescript-eslint/no-unsafe-argument": "error",
          "@typescript-eslint/no-unsafe-assignment": "error",
          "@typescript-eslint/no-unsafe-call": "error",
          "@typescript-eslint/no-unsafe-declaration-merging": "error",
          "@typescript-eslint/no-unsafe-enum-comparison": "error",
          "@typescript-eslint/no-unsafe-return": "error",
          "@typescript-eslint/no-unused-expressions": "error",
          "@typescript-eslint/no-useless-constructor": "error",
          "@typescript-eslint/no-useless-empty-export": "error",
          "@typescript-eslint/no-var-requires": "error",
          "@typescript-eslint/non-nullable-type-assertion-style": "error",
          "@typescript-eslint/object-curly-spacing": [
            "error",
            "never",
          ],
          "@typescript-eslint/padding-line-between-statements": [
            "error",
            {
              "blankLine": "always",
              "next": "*",
              "prev": "multiline-block-like",
            },
          ],
          "@typescript-eslint/parameter-properties": [
            "error",
            {
              "prefer": "parameter-property",
            },
          ],
          "@typescript-eslint/prefer-as-const": "error",
          "@typescript-eslint/prefer-for-of": "error",
          "@typescript-eslint/prefer-function-type": "error",
          "@typescript-eslint/prefer-includes": "error",
          "@typescript-eslint/prefer-literal-enum-member": "error",
          "@typescript-eslint/prefer-namespace-keyword": "error",
          "@typescript-eslint/prefer-nullish-coalescing": [
            "error",
            {
              "ignoreConditionalTests": false,
              "ignoreMixedLogicalExpressions": false,
              "ignoreTernaryTests": false,
            },
          ],
          "@typescript-eslint/prefer-optional-chain": "error",
          "@typescript-eslint/prefer-readonly": "error",
          "@typescript-eslint/prefer-reduce-type-parameter": "error",
          "@typescript-eslint/prefer-regexp-exec": "error",
          "@typescript-eslint/prefer-return-this-type": "error",
          "@typescript-eslint/prefer-string-starts-ends-with": "error",
          "@typescript-eslint/prefer-ts-expect-error": "error",
          "@typescript-eslint/promise-function-async": "error",
          "@typescript-eslint/quotes": [
            "error",
            "single",
          ],
          "@typescript-eslint/require-array-sort-compare": [
            "error",
            {
              "ignoreStringArrays": true,
            },
          ],
          "@typescript-eslint/restrict-plus-operands": [
            "error",
            {
              "allowAny": false,
            },
          ],
          "@typescript-eslint/restrict-template-expressions": [
            "error",
            {
              "allowNumber": true,
            },
          ],
          "@typescript-eslint/return-await": "error",
          "@typescript-eslint/semi": [
            "error",
            "always",
          ],
          "@typescript-eslint/space-before-blocks": [
            "error",
            "always",
          ],
          "@typescript-eslint/space-before-function-paren": [
            "error",
            {
              "anonymous": "always",
              "asyncArrow": "always",
              "named": "never",
            },
          ],
          "@typescript-eslint/space-infix-ops": "error",
          "@typescript-eslint/switch-exhaustiveness-check": "error",
          "@typescript-eslint/triple-slash-reference": [
            "error",
            {
              "lib": "never",
              "path": "never",
              "types": "never",
            },
          ],
          "@typescript-eslint/type-annotation-spacing": "error",
          "@typescript-eslint/unified-signatures": [
            "error",
            {
              "ignoreDifferentlyNamedParameters": true,
            },
          ],
          "brace-style": "off",
          "camelcase": "off",
          "comma-dangle": "off",
          "comma-spacing": "off",
          "default-param-last": "off",
          "dot-notation": "off",
          "func-call-spacing": "off",
          "import/named": "off",
          "import/namespace": "off",
          "indent": "off",
          "keyword-spacing": "off",
          "lines-between-class-members": "off",
          "no-array-constructor": "off",
          "no-constant-condition": "error",
          "no-dupe-class-members": "off",
          "no-duplicate-imports": "off",
          "no-empty-function": "off",
          "no-extra-parens": "off",
          "no-extra-semi": "off",
          "no-loop-func": "off",
          "no-loss-of-precision": "off",
          "no-redeclare": "off",
          "no-restricted-imports": "off",
          "no-throw-literal": "off",
          "no-undef": "off",
          "no-unused-expressions": "off",
          "no-unused-vars": "off",
          "no-useless-constructor": "off",
          "no-void": [
            "error",
            {
              "allowAsStatement": true,
            },
          ],
          "node/no-unsupported-features/es-builtins": "off",
          "node/no-unsupported-features/es-syntax": "off",
          "object-curly-spacing": "off",
          "padding-line-between-statements": "off",
          "quotes": "off",
          "semi": "off",
          "space-before-blocks": "off",
          "space-before-function-paren": "off",
          "space-infix-ops": "off",
        },
        "settings": {
          "import/parsers": {
            "/Users/manaschimpidi/Code/hotcakes-core/node_modules/@typescript-eslint/parser/dist/index.js": [
              ".ts",
              ".tsx",
            ],
          },
          "import/resolver": {
            "node": {
              "extensions": [
                ".js",
                ".jsx",
                ".ts",
                ".tsx",
              ],
            },
          },
        },
      },
    ],
    "parserOptions": {
      "ecmaFeatures": {
        "jsx": true,
      },
      "ecmaVersion": "latest",
      "sourceType": "module",
    },
    "plugins": [
      "react",
      "react-hooks",
    ],
    "reportUnusedDisableDirectives": true,
    "rules": {
      "accessor-pairs": [
        "error",
        {
          "enforceForClassMembers": true,
        },
      ],
      "array-bracket-newline": [
        "error",
        "consistent",
      ],
      "array-bracket-spacing": [
        "error",
        "never",
      ],
      "array-callback-return": [
        "error",
        {
          "allowImplicit": true,
        },
      ],
      "array-element-newline": [
        "error",
        "consistent",
      ],
      "arrow-body-style": "error",
      "arrow-parens": [
        "error",
        "as-needed",
      ],
      "arrow-spacing": [
        "error",
        {
          "after": true,
          "before": true,
        },
      ],
      "block-scoped-var": "error",
      "brace-style": [
        "error",
        "1tbs",
        {
          "allowSingleLine": false,
        },
      ],
      "camelcase": [
        "error",
        {
          "properties": "always",
        },
      ],
      "capitalized-comments": [
        "error",
        "always",
        {
          "ignoreConsecutiveComments": true,
          "ignoreInlineComments": true,
          "ignorePattern": "pragma|ignore|prettier-ignore|webpack\\\\w+:|c8|type-coverage:",
        },
      ],
      "comma-dangle": [
        "error",
        "always-multiline",
      ],
      "comma-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "comma-style": [
        "error",
        "last",
      ],
      "complexity": "warn",
      "computed-property-spacing": [
        "error",
        "never",
        {
          "enforceForClassMembers": true,
        },
      ],
      "constructor-super": "error",
      "curly": "error",
      "default-case": "error",
      "default-case-last": "error",
      "dot-location": [
        "error",
        "property",
      ],
      "dot-notation": "error",
      "eol-last": "error",
      "eqeqeq": "error",
      "for-direction": "error",
      "func-call-spacing": [
        "error",
        "never",
      ],
      "func-name-matching": [
        "error",
        {
          "considerPropertyDescriptor": true,
        },
      ],
      "func-names": [
        "error",
        "never",
      ],
      "function-call-argument-newline": [
        "error",
        "consistent",
      ],
      "generator-star-spacing": [
        "error",
        "both",
      ],
      "getter-return": "error",
      "grouped-accessor-pairs": [
        "error",
        "getBeforeSet",
      ],
      "guard-for-in": "error",
      "indent": [
        "error",
        "tab",
        {
          "SwitchCase": 1,
        },
      ],
      "jsx-quotes": [
        "error",
        "prefer-single",
      ],
      "key-spacing": [
        "error",
        {
          "afterColon": true,
          "beforeColon": false,
        },
      ],
      "keyword-spacing": "error",
      "linebreak-style": [
        "error",
        "unix",
      ],
      "lines-between-class-members": [
        "error",
        "always",
        {
          "exceptAfterSingleLine": true,
        },
      ],
      "max-depth": "warn",
      "max-nested-callbacks": [
        "warn",
        4,
      ],
      "max-params": [
        "warn",
        {
          "max": 4,
        },
      ],
      "max-statements-per-line": "error",
      "new-cap": [
        "error",
        {
          "capIsNew": true,
          "newIsCap": true,
        },
      ],
      "new-parens": "error",
      "no-alert": "error",
      "no-array-constructor": "error",
      "no-async-promise-executor": "error",
      "no-await-in-loop": "error",
      "no-bitwise": "error",
      "no-buffer-constructor": "error",
      "no-caller": "error",
      "no-case-declarations": "error",
      "no-class-assign": "error",
      "no-compare-neg-zero": "error",
      "no-cond-assign": "error",
      "no-const-assign": "error",
      "no-constant-binary-expression": "error",
      "no-constant-condition": "error",
      "no-constructor-return": "error",
      "no-control-regex": "error",
      "no-debugger": "error",
      "no-delete-var": "error",
      "no-dupe-args": "error",
      "no-dupe-class-members": "error",
      "no-dupe-else-if": "error",
      "no-dupe-keys": "error",
      "no-duplicate-case": "error",
      "no-else-return": [
        "error",
        {
          "allowElseIf": false,
        },
      ],
      "no-empty": [
        "error",
        {
          "allowEmptyCatch": true,
        },
      ],
      "no-empty-character-class": "error",
      "no-empty-pattern": "error",
      "no-empty-static-block": "error",
      "no-eq-null": "error",
      "no-eval": "error",
      "no-ex-assign": "error",
      "no-extend-native": "error",
      "no-extra-bind": "error",
      "no-extra-boolean-cast": "error",
      "no-extra-label": "error",
      "no-extra-semi": "error",
      "no-fallthrough": "error",
      "no-floating-decimal": "error",
      "no-func-assign": "error",
      "no-global-assign": "error",
      "no-implicit-coercion": "error",
      "no-implicit-globals": "error",
      "no-implied-eval": "error",
      "no-import-assign": "error",
      "no-inner-declarations": "error",
      "no-invalid-regexp": "error",
      "no-irregular-whitespace": "error",
      "no-iterator": "error",
      "no-label-var": "error",
      "no-labels": "error",
      "no-lone-blocks": "error",
      "no-lonely-if": "error",
      "no-loss-of-precision": "error",
      "no-misleading-character-class": "error",
      "no-mixed-operators": "error",
      "no-mixed-spaces-and-tabs": "error",
      "no-multi-assign": "error",
      "no-multi-spaces": "error",
      "no-multi-str": "error",
      "no-multiple-empty-lines": [
        "error",
        {
          "max": 1,
        },
      ],
      "no-negated-condition": "error",
      "no-new": "error",
      "no-new-func": "error",
      "no-new-native-nonconstructor": "error",
      "no-new-object": "error",
      "no-new-wrappers": "error",
      "no-nonoctal-decimal-escape": "error",
      "no-obj-calls": "error",
      "no-octal": "error",
      "no-octal-escape": "error",
      "no-promise-executor-return": "error",
      "no-proto": "error",
      "no-prototype-builtins": "error",
      "no-redeclare": "error",
      "no-regex-spaces": "error",
      "no-restricted-globals": [
        "error",
        "event",
      ],
      "no-restricted-imports": [
        "error",
        "domain",
        "freelist",
        "smalloc",
        "punycode",
        "sys",
        "querystring",
        "colors",
      ],
      "no-return-assign": [
        "error",
        "always",
      ],
      "no-return-await": "error",
      "no-script-url": "error",
      "no-self-assign": [
        "error",
        {
          "props": true,
        },
      ],
      "no-self-compare": "error",
      "no-sequences": "error",
      "no-setter-return": "error",
      "no-shadow-restricted-names": "error",
      "no-sparse-arrays": "error",
      "no-template-curly-in-string": "error",
      "no-this-before-super": "error",
      "no-throw-literal": "error",
      "no-trailing-spaces": "error",
      "no-undef": [
        "error",
        {
          "typeof": true,
        },
      ],
      "no-undef-init": "error",
      "no-unexpected-multiline": "error",
      "no-unmodified-loop-condition": "error",
      "no-unneeded-ternary": "error",
      "no-unreachable": "error",
      "no-unreachable-loop": "error",
      "no-unsafe-finally": "error",
      "no-unsafe-negation": [
        "error",
        {
          "enforceForOrderingRelations": true,
        },
      ],
      "no-unsafe-optional-chaining": [
        "error",
        {
          "disallowArithmeticOperators": true,
        },
      ],
      "no-unused-expressions": [
        "error",
        {
          "enforceForJSX": true,
        },
      ],
      "no-unused-labels": "error",
      "no-unused-vars": [
        "error",
        {
          "args": "after-used",
          "argsIgnorePattern": "^_",
          "caughtErrors": "all",
          "caughtErrorsIgnorePattern": "^_$",
          "ignoreRestSiblings": true,
          "vars": "all",
        },
      ],
      "no-useless-backreference": "error",
      "no-useless-call": "error",
      "no-useless-catch": "error",
      "no-useless-computed-key": [
        "error",
        {
          "enforceForClassMembers": true,
        },
      ],
      "no-useless-concat": "error",
      "no-useless-constructor": "error",
      "no-useless-escape": "error",
      "no-useless-rename": "error",
      "no-useless-return": "error",
      "no-var": "error",
      "no-void": "error",
      "no-warning-comments": "warn",
      "no-whitespace-before-property": "error",
      "no-with": "error",
      "object-curly-spacing": [
        "error",
        "never",
      ],
      "object-shorthand": [
        "error",
        "always",
        {
          "avoidExplicitReturnArrows": true,
        },
      ],
      "one-var": [
        "error",
        "never",
      ],
      "one-var-declaration-per-line": "error",
      "operator-assignment": [
        "error",
        "always",
      ],
      "operator-linebreak": [
        "error",
        "before",
      ],
      "padded-blocks": [
        "error",
        "never",
        {
          "allowSingleLineBlocks": false,
        },
      ],
      "padding-line-between-statements": [
        "error",
        {
          "blankLine": "always",
          "next": "*",
          "prev": "multiline-block-like",
        },
      ],
      "prefer-arrow-callback": [
        "error",
        {
          "allowNamedFunctions": true,
        },
      ],
      "prefer-const": [
        "error",
        {
          "destructuring": "all",
        },
      ],
      "prefer-destructuring": [
        "error",
        {
          "AssignmentExpression": {
            "array": false,
            "object": false,
          },
          "VariableDeclarator": {
            "array": false,
            "object": true,
          },
        },
        {
          "enforceForRenamedProperties": false,
        },
      ],
      "prefer-exponentiation-operator": "error",
      "prefer-numeric-literals": "error",
      "prefer-object-spread": "error",
      "prefer-promise-reject-errors": [
        "error",
        {
          "allowEmptyReject": true,
        },
      ],
      "prefer-regex-literals": [
        "error",
        {
          "disallowRedundantWrapping": true,
        },
      ],
      "prefer-rest-params": "error",
      "prefer-spread": "error",
      "quote-props": [
        "error",
        "as-needed",
      ],
      "quotes": [
        "error",
        "single",
      ],
      "radix": "error",
      "react-hooks/exhaustive-deps": "warn",
      "react-hooks/rules-of-hooks": "error",
      "react/boolean-prop-naming": [
        "error",
        {
          "validateNested": true,
        },
      ],
      "react/button-has-type": "error",
      "react/default-props-match-prop-types": "error",
      "react/function-component-definition": [
        "error",
        {
          "namedComponents": "function-declaration",
          "unnamedComponents": "arrow-function",
        },
      ],
      "react/hook-use-state": "error",
      "react/iframe-missing-sandbox": "error",
      "react/jsx-boolean-value": "error",
      "react/jsx-child-element-spacing": "error",
      "react/jsx-closing-bracket-location": [
        "error",
        {
          "nonEmpty": "tag-aligned",
          "selfClosing": false,
        },
      ],
      "react/jsx-closing-tag-location": "error",
      "react/jsx-curly-brace-presence": [
        "error",
        {
          "children": "never",
          "propElementValues": "always",
          "props": "never",
        },
      ],
      "react/jsx-curly-newline": [
        "error",
        {
          "multiline": "consistent",
          "singleline": "forbid",
        },
      ],
      "react/jsx-curly-spacing": [
        "error",
        "never",
      ],
      "react/jsx-equals-spacing": [
        "error",
        "never",
      ],
      "react/jsx-first-prop-new-line": "error",
      "react/jsx-fragments": [
        "error",
        "syntax",
      ],
      "react/jsx-indent": [
        "error",
        "tab",
        {
          "checkAttributes": true,
          "indentLogicalExpressions": true,
        },
      ],
      "react/jsx-indent-props": [
        "error",
        "tab",
      ],
      "react/jsx-key": [
        "error",
        {
          "checkFragmentShorthand": true,
          "checkKeyMustBeforeSpread": true,
          "warnOnDuplicates": true,
        },
      ],
      "react/jsx-max-props-per-line": [
        "error",
        {
          "maximum": 3,
          "when": "multiline",
        },
      ],
      "react/jsx-no-bind": [
        "error",
        {
          "allowArrowFunctions": true,
        },
      ],
      "react/jsx-no-comment-textnodes": "error",
      "react/jsx-no-constructed-context-values": "error",
      "react/jsx-no-duplicate-props": [
        "error",
        {
          "ignoreCase": true,
        },
      ],
      "react/jsx-no-script-url": "error",
      "react/jsx-no-target-blank": [
        "error",
        {
          "forms": true,
          "warnOnSpreadAttributes": true,
        },
      ],
      "react/jsx-no-undef": "error",
      "react/jsx-no-useless-fragment": "error",
      "react/jsx-pascal-case": "error",
      "react/jsx-props-no-multi-spaces": "error",
      "react/jsx-sort-props": [
        "error",
        {
          "callbacksLast": true,
          "noSortAlphabetically": true,
          "reservedFirst": true,
          "shorthandFirst": true,
        },
      ],
      "react/jsx-tag-spacing": [
        "error",
        {
          "afterOpening": "never",
          "beforeClosing": "never",
          "beforeSelfClosing": "never",
          "closingSlash": "never",
        },
      ],
      "react/jsx-uses-react": "error",
      "react/jsx-uses-vars": "error",
      "react/jsx-wrap-multilines": [
        "error",
        {
          "arrow": "parens-new-line",
          "assignment": "parens-new-line",
          "condition": "ignore",
          "declaration": "parens-new-line",
          "logical": "ignore",
          "prop": "ignore",
          "return": "parens-new-line",
        },
      ],
      "react/no-access-state-in-setstate": "error",
      "react/no-array-index-key": "error",
      "react/no-arrow-function-lifecycle": "error",
      "react/no-children-prop": "error",
      "react/no-danger": "error",
      "react/no-danger-with-children": "error",
      "react/no-deprecated": "error",
      "react/no-did-update-set-state": "error",
      "react/no-direct-mutation-state": "error",
      "react/no-find-dom-node": "error",
      "react/no-invalid-html-attribute": "error",
      "react/no-is-mounted": "error",
      "react/no-namespace": "error",
      "react/no-redundant-should-component-update": "error",
      "react/no-render-return-value": "error",
      "react/no-string-refs": [
        "error",
        {
          "noTemplateLiterals": true,
        },
      ],
      "react/no-this-in-sfc": "error",
      "react/no-typos": "error",
      "react/no-unescaped-entities": "error",
      "react/no-unknown-property": "error",
      "react/no-unsafe": "error",
      "react/no-unused-prop-types": "error",
      "react/no-unused-state": "error",
      "react/prefer-read-only-props": "error",
      "react/prop-types": "error",
      "react/react-in-jsx-scope": "error",
      "react/require-default-props": [
        "error",
        {
          "forbidDefaultForRequired": true,
          "ignoreFunctionalComponents": true,
        },
      ],
      "react/self-closing-comp": "error",
      "react/state-in-constructor": [
        "error",
        "never",
      ],
      "react/static-property-placement": "error",
      "react/style-prop-object": [
        "error",
        {
          "allow": [
            "FormattedNumber",
          ],
        },
      ],
      "react/void-dom-elements-no-children": "error",
      "require-yield": "error",
      "rest-spread-spacing": [
        "error",
        "never",
      ],
      "semi": [
        "error",
        "always",
      ],
      "semi-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "semi-style": [
        "error",
        "last",
      ],
      "space-before-blocks": [
        "error",
        "always",
      ],
      "space-before-function-paren": [
        "error",
        {
          "anonymous": "always",
          "asyncArrow": "always",
          "named": "never",
        },
      ],
      "space-in-parens": [
        "error",
        "never",
      ],
      "space-infix-ops": "error",
      "space-unary-ops": "error",
      "spaced-comment": [
        "error",
        "always",
        {
          "block": {
            "balanced": true,
            "exceptions": [
              "-",
              "+",
              "*",
            ],
            "markers": [
              "!",
              "*",
            ],
          },
          "line": {
            "exceptions": [
              "-",
              "+",
              "*",
            ],
            "markers": [
              "!",
              "/",
              "=>",
            ],
          },
        },
      ],
      "switch-colon-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "symbol-description": "error",
      "template-curly-spacing": "error",
      "template-tag-spacing": [
        "error",
        "never",
      ],
      "unicode-bom": [
        "error",
        "never",
      ],
      "use-isnan": "error",
      "valid-typeof": [
        "error",
        {
          "requireStringLiterals": false,
        },
      ],
      "wrap-iife": [
        "error",
        "inside",
        {
          "functionPrototypeMethods": true,
        },
      ],
      "yield-star-spacing": [
        "error",
        "both",
      ],
      "yoda": "error",
    },
    "settings": {
      "react": {
        "version": "detect",
      },
    },
  },
  "env": {
    "es2021": true,
    "node": true,
  },
  "overrides": [
    {
      "files": [
        "*.ts",
        "*.tsx",
      ],
      "overrides": [
        {
          "files": [
            "**/*.d.ts",
          ],
          "rules": {
            "@typescript-eslint/no-unused-vars": "off",
          },
        },
        {
          "files": [
            "**/*.test-d.ts",
          ],
          "rules": {
            "@typescript-eslint/no-confusing-void-expression": "off",
            "@typescript-eslint/no-unsafe-call": "off",
          },
        },
        {
          "files": [
            "**/*.tsx",
          ],
          "rules": {
            "@typescript-eslint/naming-convention": [
              "error",
              {
                "filter": {
                  "match": false,
                  "regex": "[- ]",
                },
                "format": [
                  "strictCamelCase",
                  "StrictPascalCase",
                ],
                "leadingUnderscore": "allowSingleOrDouble",
                "selector": [
                  "variable",
                  "function",
                  "classProperty",
                  "objectLiteralProperty",
                  "parameterProperty",
                  "classMethod",
                  "objectLiteralMethod",
                  "typeMethod",
                  "accessor",
                ],
                "trailingUnderscore": "allow",
              },
              {
                "format": [
                  "StrictPascalCase",
                ],
                "selector": "typeLike",
              },
              {
                "format": [
                  "StrictPascalCase",
                ],
                "prefix": [
                  "is",
                  "has",
                  "can",
                  "should",
                  "will",
                  "did",
                ],
                "selector": "variable",
                "types": [
                  "boolean",
                ],
              },
              {
                "filter": "^(?!I)[A-Z]",
                "format": [
                  "StrictPascalCase",
                ],
                "selector": "interface",
              },
              {
                "filter": "^T$|^[A-Z][a-zA-Z]+$",
                "format": [
                  "StrictPascalCase",
                ],
                "selector": "typeParameter",
              },
              {
                "format": null,
                "modifiers": [
                  "requiresQuotes",
                ],
                "selector": [
                  "classProperty",
                  "objectLiteralProperty",
                ],
              },
            ],
          },
        },
      ],
      "parser": "/Users/manaschimpidi/Code/hotcakes-core/node_modules/@typescript-eslint/parser/dist/index.js",
      "parserOptions": {
        "ecmaFeatures": {
          "jsx": true,
        },
        "project": "tsconfig.json",
        "sourceType": "module",
        "warnOnUnsupportedTypeScriptVersion": false,
      },
      "plugins": [
        "@typescript-eslint",
      ],
      "rules": {
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "array-simple",
          },
        ],
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-ts-comment": [
          "error",
          {
            "minimumDescriptionLength": 4,
            "ts-expect-error": "allow-with-description",
          },
        ],
        "@typescript-eslint/ban-tslint-comment": "error",
        "@typescript-eslint/ban-types": [
          "error",
          {
            "extendDefaults": false,
            "types": {
              "BigInt": {
                "fixWith": "bigint",
                "message": "Use \`bigint\` instead.",
              },
              "Boolean": {
                "fixWith": "boolean",
                "message": "Use \`boolean\` instead.",
              },
              "Function": "Use a specific function type instead, like \`() => void\`.",
              "Number": {
                "fixWith": "number",
                "message": "Use \`number\` instead.",
              },
              "Object": {
                "fixWith": "Record<string, unknown>",
                "message": "The \`Object\` type is mostly the same as \`unknown\`. You probably want \`Record<string, unknown>\` instead. See https://github.com/typescript-eslint/typescript-eslint/pull/848",
              },
              "String": {
                "fixWith": "string",
                "message": "Use \`string\` instead.",
              },
              "Symbol": {
                "fixWith": "symbol",
                "message": "Use \`symbol\` instead.",
              },
              "[[[[[]]]]]": "🦄💥",
              "[[[[]]]]": "ur drunk 🤡",
              "[[[]]]": "Don't use \`[[[]]]\`. Use \`SomeType[][][]\` instead.",
              "[[]]": "Don't use \`[[]]\`. It only allows an array with a single element which is an empty array. Use \`SomeType[][]\` instead.",
              "[]": "Don't use the empty array type \`[]\`. It only allows empty arrays. Use \`SomeType[]\` instead.",
              "null": {
                "fixWith": "undefined",
                "message": "Use \`undefined\` instead. See: https://github.com/sindresorhus/meta/issues/7",
              },
              "object": {
                "fixWith": "Record<string, unknown>",
                "message": "The \`object\` type is hard to use. Use \`Record<string, unknown>\` instead. See: https://github.com/typescript-eslint/typescript-eslint/pull/848",
              },
              "{}": {
                "fixWith": "Record<string, unknown>",
                "message": "The \`{}\` type is mostly the same as \`unknown\`. You probably want \`Record<string, unknown>\` instead.",
              },
            },
          },
        ],
        "@typescript-eslint/brace-style": [
          "error",
          "1tbs",
          {
            "allowSingleLine": false,
          },
        ],
        "@typescript-eslint/class-literal-property-style": [
          "error",
          "getters",
        ],
        "@typescript-eslint/comma-dangle": [
          "error",
          "always-multiline",
        ],
        "@typescript-eslint/comma-spacing": [
          "error",
          {
            "after": true,
            "before": false,
          },
        ],
        "@typescript-eslint/consistent-generic-constructors": [
          "error",
          "constructor",
        ],
        "@typescript-eslint/consistent-indexed-object-style": "error",
        "@typescript-eslint/consistent-type-assertions": [
          "error",
          {
            "assertionStyle": "as",
            "objectLiteralTypeAssertions": "allow-as-parameter",
          },
        ],
        "@typescript-eslint/consistent-type-definitions": [
          "error",
          "type",
        ],
        "@typescript-eslint/consistent-type-exports": [
          "error",
          {
            "fixMixedExportsWithInlineTypeSpecifier": true,
          },
        ],
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "fixStyle": "inline-type-imports",
          },
        ],
        "@typescript-eslint/default-param-last": "error",
        "@typescript-eslint/dot-notation": "error",
        "@typescript-eslint/func-call-spacing": [
          "error",
          "never",
        ],
        "@typescript-eslint/indent": [
          "error",
          "tab",
          {
            "SwitchCase": 1,
          },
        ],
        "@typescript-eslint/keyword-spacing": "error",
        "@typescript-eslint/lines-between-class-members": [
          "error",
          "always",
          {
            "exceptAfterSingleLine": true,
          },
        ],
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "semi",
              "requireLast": true,
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": false,
            },
          },
        ],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": [
              "signature",
              "public-static-field",
              "public-static-method",
              "protected-static-field",
              "protected-static-method",
              "private-static-field",
              "private-static-method",
              "static-field",
              "static-method",
              "public-decorated-field",
              "public-instance-field",
              "public-abstract-field",
              "public-field",
              "protected-decorated-field",
              "protected-instance-field",
              "protected-abstract-field",
              "protected-field",
              "private-decorated-field",
              "private-instance-field",
              "private-field",
              "instance-field",
              "abstract-field",
              "decorated-field",
              "field",
              "public-constructor",
              "protected-constructor",
              "private-constructor",
              "constructor",
              "public-decorated-method",
              "public-instance-method",
              "public-abstract-method",
              "public-method",
              "protected-decorated-method",
              "protected-instance-method",
              "protected-abstract-method",
              "protected-method",
              "private-decorated-method",
              "private-instance-method",
              "private-method",
              "instance-method",
              "abstract-method",
              "decorated-method",
              "method",
            ],
          },
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "filter": {
              "match": false,
              "regex": "[- ]",
            },
            "format": [
              "strictCamelCase",
            ],
            "leadingUnderscore": "allowSingleOrDouble",
            "selector": [
              "variable",
              "function",
              "classProperty",
              "objectLiteralProperty",
              "parameterProperty",
              "classMethod",
              "objectLiteralMethod",
              "typeMethod",
              "accessor",
            ],
            "trailingUnderscore": "allow",
          },
          {
            "format": [
              "StrictPascalCase",
            ],
            "selector": "typeLike",
          },
          {
            "format": [
              "StrictPascalCase",
            ],
            "prefix": [
              "is",
              "has",
              "can",
              "should",
              "will",
              "did",
            ],
            "selector": "variable",
            "types": [
              "boolean",
            ],
          },
          {
            "filter": "^(?!I)[A-Z]",
            "format": [
              "StrictPascalCase",
            ],
            "selector": "interface",
          },
          {
            "filter": "^T$|^[A-Z][a-zA-Z]+$",
            "format": [
              "StrictPascalCase",
            ],
            "selector": "typeParameter",
          },
          {
            "format": null,
            "modifiers": [
              "requiresQuotes",
            ],
            "selector": [
              "classProperty",
              "objectLiteralProperty",
            ],
          },
        ],
        "@typescript-eslint/no-array-constructor": "error",
        "@typescript-eslint/no-base-to-string": "error",
        "@typescript-eslint/no-confusing-void-expression": "error",
        "@typescript-eslint/no-dupe-class-members": "error",
        "@typescript-eslint/no-duplicate-enum-values": "error",
        "@typescript-eslint/no-duplicate-type-constituents": "error",
        "@typescript-eslint/no-dynamic-delete": "error",
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-empty-interface": [
          "error",
          {
            "allowSingleExtends": true,
          },
        ],
        "@typescript-eslint/no-extra-non-null-assertion": "error",
        "@typescript-eslint/no-extra-semi": "error",
        "@typescript-eslint/no-extraneous-class": [
          "error",
          {
            "allowConstructorOnly": false,
            "allowEmpty": false,
            "allowStaticOnly": false,
            "allowWithDecorator": true,
          },
        ],
        "@typescript-eslint/no-floating-promises": [
          "error",
          {
            "ignoreIIFE": true,
            "ignoreVoid": true,
          },
        ],
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/no-loop-func": "error",
        "@typescript-eslint/no-loss-of-precision": "error",
        "@typescript-eslint/no-meaningless-void-operator": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksConditionals": true,
            "checksVoidReturn": false,
          },
        ],
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-redeclare": "error",
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-restricted-imports": [
          "error",
          {
            "paths": [
              "error",
              "domain",
              "freelist",
              "smalloc",
              "punycode",
              "sys",
              "querystring",
              "colors",
            ],
          },
        ],
        "@typescript-eslint/no-this-alias": [
          "error",
          {
            "allowDestructuring": true,
          },
        ],
        "@typescript-eslint/no-throw-literal": [
          "error",
          {
            "allowThrowingAny": false,
            "allowThrowingUnknown": true,
          },
        ],
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-unnecessary-qualifier": "error",
        "@typescript-eslint/no-unnecessary-type-arguments": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-unnecessary-type-constraint": "error",
        "@typescript-eslint/no-unsafe-argument": "error",
        "@typescript-eslint/no-unsafe-assignment": "error",
        "@typescript-eslint/no-unsafe-call": "error",
        "@typescript-eslint/no-unsafe-declaration-merging": "error",
        "@typescript-eslint/no-unsafe-enum-comparison": "error",
        "@typescript-eslint/no-unsafe-return": "error",
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-useless-constructor": "error",
        "@typescript-eslint/no-useless-empty-export": "error",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/non-nullable-type-assertion-style": "error",
        "@typescript-eslint/object-curly-spacing": [
          "error",
          "never",
        ],
        "@typescript-eslint/padding-line-between-statements": [
          "error",
          {
            "blankLine": "always",
            "next": "*",
            "prev": "multiline-block-like",
          },
        ],
        "@typescript-eslint/parameter-properties": [
          "error",
          {
            "prefer": "parameter-property",
          },
        ],
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-includes": "error",
        "@typescript-eslint/prefer-literal-enum-member": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/prefer-nullish-coalescing": [
          "error",
          {
            "ignoreConditionalTests": false,
            "ignoreMixedLogicalExpressions": false,
            "ignoreTernaryTests": false,
          },
        ],
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/prefer-reduce-type-parameter": "error",
        "@typescript-eslint/prefer-regexp-exec": "error",
        "@typescript-eslint/prefer-return-this-type": "error",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        "@typescript-eslint/prefer-ts-expect-error": "error",
        "@typescript-eslint/promise-function-async": "error",
        "@typescript-eslint/quotes": [
          "error",
          "single",
        ],
        "@typescript-eslint/require-array-sort-compare": [
          "error",
          {
            "ignoreStringArrays": true,
          },
        ],
        "@typescript-eslint/restrict-plus-operands": [
          "error",
          {
            "allowAny": false,
          },
        ],
        "@typescript-eslint/restrict-template-expressions": [
          "error",
          {
            "allowNumber": true,
          },
        ],
        "@typescript-eslint/return-await": "error",
        "@typescript-eslint/semi": [
          "error",
          "always",
        ],
        "@typescript-eslint/space-before-blocks": [
          "error",
          "always",
        ],
        "@typescript-eslint/space-before-function-paren": [
          "error",
          {
            "anonymous": "always",
            "asyncArrow": "always",
            "named": "never",
          },
        ],
        "@typescript-eslint/space-infix-ops": "error",
        "@typescript-eslint/switch-exhaustiveness-check": "error",
        "@typescript-eslint/triple-slash-reference": [
          "error",
          {
            "lib": "never",
            "path": "never",
            "types": "never",
          },
        ],
        "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/unified-signatures": [
          "error",
          {
            "ignoreDifferentlyNamedParameters": true,
          },
        ],
        "brace-style": "off",
        "camelcase": "off",
        "comma-dangle": "off",
        "comma-spacing": "off",
        "default-param-last": "off",
        "dot-notation": "off",
        "func-call-spacing": "off",
        "import/named": "off",
        "import/namespace": "off",
        "indent": "off",
        "keyword-spacing": "off",
        "lines-between-class-members": "off",
        "no-array-constructor": "off",
        "no-constant-condition": "error",
        "no-dupe-class-members": "off",
        "no-duplicate-imports": "off",
        "no-empty-function": "off",
        "no-extra-parens": "off",
        "no-extra-semi": "off",
        "no-loop-func": "off",
        "no-loss-of-precision": "off",
        "no-redeclare": "off",
        "no-restricted-imports": "off",
        "no-throw-literal": "off",
        "no-undef": "off",
        "no-unused-expressions": "off",
        "no-unused-vars": "off",
        "no-useless-constructor": "off",
        "no-void": [
          "error",
          {
            "allowAsStatement": true,
          },
        ],
        "node/no-unsupported-features/es-builtins": "off",
        "node/no-unsupported-features/es-syntax": "off",
        "object-curly-spacing": "off",
        "padding-line-between-statements": "off",
        "quotes": "off",
        "semi": "off",
        "space-before-blocks": "off",
        "space-before-function-paren": "off",
        "space-infix-ops": "off",
      },
      "settings": {
        "import/parsers": {
          "/Users/manaschimpidi/Code/hotcakes-core/node_modules/@typescript-eslint/parser/dist/index.js": [
            ".ts",
            ".tsx",
          ],
        },
        "import/resolver": {
          "node": {
            "extensions": [
              ".js",
              ".jsx",
              ".ts",
              ".tsx",
            ],
          },
        },
      },
    },
  ],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true,
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
  },
  "plugins": [
    "react",
    "react-hooks",
  ],
  "reportUnusedDisableDirectives": true,
  "rules": {
    "accessor-pairs": [
      "error",
      {
        "enforceForClassMembers": true,
      },
    ],
    "array-bracket-newline": [
      "error",
      "consistent",
    ],
    "array-bracket-spacing": [
      "error",
      "never",
    ],
    "array-callback-return": [
      "error",
      {
        "allowImplicit": true,
      },
    ],
    "array-element-newline": [
      "error",
      "consistent",
    ],
    "arrow-body-style": "error",
    "arrow-parens": [
      "error",
      "as-needed",
    ],
    "arrow-spacing": [
      "error",
      {
        "after": true,
        "before": true,
      },
    ],
    "block-scoped-var": "error",
    "brace-style": [
      "error",
      "1tbs",
      {
        "allowSingleLine": false,
      },
    ],
    "camelcase": [
      "error",
      {
        "properties": "always",
      },
    ],
    "capitalized-comments": [
      "error",
      "always",
      {
        "ignoreConsecutiveComments": true,
        "ignoreInlineComments": true,
        "ignorePattern": "pragma|ignore|prettier-ignore|webpack\\\\w+:|c8|type-coverage:",
      },
    ],
    "comma-dangle": [
      "error",
      "always-multiline",
    ],
    "comma-spacing": [
      "error",
      {
        "after": true,
        "before": false,
      },
    ],
    "comma-style": [
      "error",
      "last",
    ],
    "complexity": "warn",
    "computed-property-spacing": [
      "error",
      "never",
      {
        "enforceForClassMembers": true,
      },
    ],
    "constructor-super": "error",
    "curly": "error",
    "default-case": "error",
    "default-case-last": "error",
    "dot-location": [
      "error",
      "property",
    ],
    "dot-notation": "error",
    "eol-last": "error",
    "eqeqeq": "error",
    "for-direction": "error",
    "func-call-spacing": [
      "error",
      "never",
    ],
    "func-name-matching": [
      "error",
      {
        "considerPropertyDescriptor": true,
      },
    ],
    "func-names": [
      "error",
      "never",
    ],
    "function-call-argument-newline": [
      "error",
      "consistent",
    ],
    "generator-star-spacing": [
      "error",
      "both",
    ],
    "getter-return": "error",
    "grouped-accessor-pairs": [
      "error",
      "getBeforeSet",
    ],
    "guard-for-in": "error",
    "indent": [
      "error",
      "tab",
      {
        "SwitchCase": 1,
      },
    ],
    "jsx-quotes": [
      "error",
      "prefer-single",
    ],
    "key-spacing": [
      "error",
      {
        "afterColon": true,
        "beforeColon": false,
      },
    ],
    "keyword-spacing": "error",
    "linebreak-style": [
      "error",
      "unix",
    ],
    "lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true,
      },
    ],
    "max-depth": "warn",
    "max-nested-callbacks": [
      "warn",
      4,
    ],
    "max-params": [
      "warn",
      {
        "max": 4,
      },
    ],
    "max-statements-per-line": "error",
    "new-cap": [
      "error",
      {
        "capIsNew": true,
        "newIsCap": true,
      },
    ],
    "new-parens": "error",
    "no-alert": "error",
    "no-array-constructor": "error",
    "no-async-promise-executor": "error",
    "no-await-in-loop": "error",
    "no-bitwise": "error",
    "no-buffer-constructor": "error",
    "no-caller": "error",
    "no-case-declarations": "error",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-const-assign": "error",
    "no-constant-binary-expression": "error",
    "no-constant-condition": "error",
    "no-constructor-return": "error",
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-dupe-args": "error",
    "no-dupe-class-members": "error",
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-else-return": [
      "error",
      {
        "allowElseIf": false,
      },
    ],
    "no-empty": [
      "error",
      {
        "allowEmptyCatch": true,
      },
    ],
    "no-empty-character-class": "error",
    "no-empty-pattern": "error",
    "no-empty-static-block": "error",
    "no-eq-null": "error",
    "no-eval": "error",
    "no-ex-assign": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-boolean-cast": "error",
    "no-extra-label": "error",
    "no-extra-semi": "error",
    "no-fallthrough": "error",
    "no-floating-decimal": "error",
    "no-func-assign": "error",
    "no-global-assign": "error",
    "no-implicit-coercion": "error",
    "no-implicit-globals": "error",
    "no-implied-eval": "error",
    "no-import-assign": "error",
    "no-inner-declarations": "error",
    "no-invalid-regexp": "error",
    "no-irregular-whitespace": "error",
    "no-iterator": "error",
    "no-label-var": "error",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-lonely-if": "error",
    "no-loss-of-precision": "error",
    "no-misleading-character-class": "error",
    "no-mixed-operators": "error",
    "no-mixed-spaces-and-tabs": "error",
    "no-multi-assign": "error",
    "no-multi-spaces": "error",
    "no-multi-str": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1,
      },
    ],
    "no-negated-condition": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-native-nonconstructor": "error",
    "no-new-object": "error",
    "no-new-wrappers": "error",
    "no-nonoctal-decimal-escape": "error",
    "no-obj-calls": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-promise-executor-return": "error",
    "no-proto": "error",
    "no-prototype-builtins": "error",
    "no-redeclare": "error",
    "no-regex-spaces": "error",
    "no-restricted-globals": [
      "error",
      "event",
    ],
    "no-restricted-imports": [
      "error",
      "domain",
      "freelist",
      "smalloc",
      "punycode",
      "sys",
      "querystring",
      "colors",
    ],
    "no-return-assign": [
      "error",
      "always",
    ],
    "no-return-await": "error",
    "no-script-url": "error",
    "no-self-assign": [
      "error",
      {
        "props": true,
      },
    ],
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-setter-return": "error",
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "error",
    "no-this-before-super": "error",
    "no-throw-literal": "error",
    "no-trailing-spaces": "error",
    "no-undef": [
      "error",
      {
        "typeof": true,
      },
    ],
    "no-undef-init": "error",
    "no-unexpected-multiline": "error",
    "no-unmodified-loop-condition": "error",
    "no-unneeded-ternary": "error",
    "no-unreachable": "error",
    "no-unreachable-loop": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": [
      "error",
      {
        "enforceForOrderingRelations": true,
      },
    ],
    "no-unsafe-optional-chaining": [
      "error",
      {
        "disallowArithmeticOperators": true,
      },
    ],
    "no-unused-expressions": [
      "error",
      {
        "enforceForJSX": true,
      },
    ],
    "no-unused-labels": "error",
    "no-unused-vars": [
      "error",
      {
        "args": "after-used",
        "argsIgnorePattern": "^_",
        "caughtErrors": "all",
        "caughtErrorsIgnorePattern": "^_$",
        "ignoreRestSiblings": true,
        "vars": "all",
      },
    ],
    "no-useless-backreference": "error",
    "no-useless-call": "error",
    "no-useless-catch": "error",
    "no-useless-computed-key": [
      "error",
      {
        "enforceForClassMembers": true,
      },
    ],
    "no-useless-concat": "error",
    "no-useless-constructor": "error",
    "no-useless-escape": "error",
    "no-useless-rename": "error",
    "no-useless-return": "error",
    "no-var": "error",
    "no-void": "error",
    "no-warning-comments": "warn",
    "no-whitespace-before-property": "error",
    "no-with": "error",
    "object-curly-spacing": [
      "error",
      "never",
    ],
    "object-shorthand": [
      "error",
      "always",
      {
        "avoidExplicitReturnArrows": true,
      },
    ],
    "one-var": [
      "error",
      "never",
    ],
    "one-var-declaration-per-line": "error",
    "operator-assignment": [
      "error",
      "always",
    ],
    "operator-linebreak": [
      "error",
      "before",
    ],
    "padded-blocks": [
      "error",
      "never",
      {
        "allowSingleLineBlocks": false,
      },
    ],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "next": "*",
        "prev": "multiline-block-like",
      },
    ],
    "prefer-arrow-callback": [
      "error",
      {
        "allowNamedFunctions": true,
      },
    ],
    "prefer-const": [
      "error",
      {
        "destructuring": "all",
      },
    ],
    "prefer-destructuring": [
      "error",
      {
        "AssignmentExpression": {
          "array": false,
          "object": false,
        },
        "VariableDeclarator": {
          "array": false,
          "object": true,
        },
      },
      {
        "enforceForRenamedProperties": false,
      },
    ],
    "prefer-exponentiation-operator": "error",
    "prefer-numeric-literals": "error",
    "prefer-object-spread": "error",
    "prefer-promise-reject-errors": [
      "error",
      {
        "allowEmptyReject": true,
      },
    ],
    "prefer-regex-literals": [
      "error",
      {
        "disallowRedundantWrapping": true,
      },
    ],
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "quote-props": [
      "error",
      "as-needed",
    ],
    "quotes": [
      "error",
      "single",
    ],
    "radix": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react-hooks/rules-of-hooks": "error",
    "react/boolean-prop-naming": [
      "error",
      {
        "validateNested": true,
      },
    ],
    "react/button-has-type": "error",
    "react/default-props-match-prop-types": "error",
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "function-declaration",
        "unnamedComponents": "arrow-function",
      },
    ],
    "react/hook-use-state": "error",
    "react/iframe-missing-sandbox": "error",
    "react/jsx-boolean-value": "error",
    "react/jsx-child-element-spacing": "error",
    "react/jsx-closing-bracket-location": [
      "error",
      {
        "nonEmpty": "tag-aligned",
        "selfClosing": false,
      },
    ],
    "react/jsx-closing-tag-location": "error",
    "react/jsx-curly-brace-presence": [
      "error",
      {
        "children": "never",
        "propElementValues": "always",
        "props": "never",
      },
    ],
    "react/jsx-curly-newline": [
      "error",
      {
        "multiline": "consistent",
        "singleline": "forbid",
      },
    ],
    "react/jsx-curly-spacing": [
      "error",
      "never",
    ],
    "react/jsx-equals-spacing": [
      "error",
      "never",
    ],
    "react/jsx-first-prop-new-line": "error",
    "react/jsx-fragments": [
      "error",
      "syntax",
    ],
    "react/jsx-indent": [
      "error",
      "tab",
      {
        "checkAttributes": true,
        "indentLogicalExpressions": true,
      },
    ],
    "react/jsx-indent-props": [
      "error",
      "tab",
    ],
    "react/jsx-key": [
      "error",
      {
        "checkFragmentShorthand": true,
        "checkKeyMustBeforeSpread": true,
        "warnOnDuplicates": true,
      },
    ],
    "react/jsx-max-props-per-line": [
      "error",
      {
        "maximum": 3,
        "when": "multiline",
      },
    ],
    "react/jsx-no-bind": [
      "error",
      {
        "allowArrowFunctions": true,
      },
    ],
    "react/jsx-no-comment-textnodes": "error",
    "react/jsx-no-constructed-context-values": "error",
    "react/jsx-no-duplicate-props": [
      "error",
      {
        "ignoreCase": true,
      },
    ],
    "react/jsx-no-script-url": "error",
    "react/jsx-no-target-blank": [
      "error",
      {
        "forms": true,
        "warnOnSpreadAttributes": true,
      },
    ],
    "react/jsx-no-undef": "error",
    "react/jsx-no-useless-fragment": "error",
    "react/jsx-pascal-case": "error",
    "react/jsx-props-no-multi-spaces": "error",
    "react/jsx-sort-props": [
      "error",
      {
        "callbacksLast": true,
        "noSortAlphabetically": true,
        "reservedFirst": true,
        "shorthandFirst": true,
      },
    ],
    "react/jsx-tag-spacing": [
      "error",
      {
        "afterOpening": "never",
        "beforeClosing": "never",
        "beforeSelfClosing": "never",
        "closingSlash": "never",
      },
    ],
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/jsx-wrap-multilines": [
      "error",
      {
        "arrow": "parens-new-line",
        "assignment": "parens-new-line",
        "condition": "ignore",
        "declaration": "parens-new-line",
        "logical": "ignore",
        "prop": "ignore",
        "return": "parens-new-line",
      },
    ],
    "react/no-access-state-in-setstate": "error",
    "react/no-array-index-key": "error",
    "react/no-arrow-function-lifecycle": "error",
    "react/no-children-prop": "error",
    "react/no-danger": "error",
    "react/no-danger-with-children": "error",
    "react/no-deprecated": "error",
    "react/no-did-update-set-state": "error",
    "react/no-direct-mutation-state": "error",
    "react/no-find-dom-node": "error",
    "react/no-invalid-html-attribute": "error",
    "react/no-is-mounted": "error",
    "react/no-namespace": "error",
    "react/no-redundant-should-component-update": "error",
    "react/no-render-return-value": "error",
    "react/no-string-refs": [
      "error",
      {
        "noTemplateLiterals": true,
      },
    ],
    "react/no-this-in-sfc": "error",
    "react/no-typos": "error",
    "react/no-unescaped-entities": "error",
    "react/no-unknown-property": "error",
    "react/no-unsafe": "error",
    "react/no-unused-prop-types": "error",
    "react/no-unused-state": "error",
    "react/prefer-read-only-props": "error",
    "react/prop-types": "error",
    "react/react-in-jsx-scope": "error",
    "react/require-default-props": [
      "error",
      {
        "forbidDefaultForRequired": true,
        "ignoreFunctionalComponents": true,
      },
    ],
    "react/self-closing-comp": "error",
    "react/state-in-constructor": [
      "error",
      "never",
    ],
    "react/static-property-placement": "error",
    "react/style-prop-object": [
      "error",
      {
        "allow": [
          "FormattedNumber",
        ],
      },
    ],
    "react/void-dom-elements-no-children": "error",
    "require-yield": "error",
    "rest-spread-spacing": [
      "error",
      "never",
    ],
    "semi": [
      "error",
      "always",
    ],
    "semi-spacing": [
      "error",
      {
        "after": true,
        "before": false,
      },
    ],
    "semi-style": [
      "error",
      "last",
    ],
    "space-before-blocks": [
      "error",
      "always",
    ],
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "asyncArrow": "always",
        "named": "never",
      },
    ],
    "space-in-parens": [
      "error",
      "never",
    ],
    "space-infix-ops": "error",
    "space-unary-ops": "error",
    "spaced-comment": [
      "error",
      "always",
      {
        "block": {
          "balanced": true,
          "exceptions": [
            "-",
            "+",
            "*",
          ],
          "markers": [
            "!",
            "*",
          ],
        },
        "line": {
          "exceptions": [
            "-",
            "+",
            "*",
          ],
          "markers": [
            "!",
            "/",
            "=>",
          ],
        },
      },
    ],
    "switch-colon-spacing": [
      "error",
      {
        "after": true,
        "before": false,
      },
    ],
    "symbol-description": "error",
    "template-curly-spacing": "error",
    "template-tag-spacing": [
      "error",
      "never",
    ],
    "unicode-bom": [
      "error",
      "never",
    ],
    "use-isnan": "error",
    "valid-typeof": [
      "error",
      {
        "requireStringLiterals": false,
      },
    ],
    "wrap-iife": [
      "error",
      "inside",
      {
        "functionPrototypeMethods": true,
      },
    ],
    "yield-star-spacing": [
      "error",
      "both",
    ],
    "yoda": "error",
  },
  "settings": {
    "react": {
      "version": "detect",
    },
  },
}
`;

exports[`should match tsx config > test 1`] = `
{
  "default": {
    "env": {
      "es2021": true,
      "node": true,
    },
    "overrides": [
      {
        "files": [
          "*.ts",
          "*.tsx",
        ],
        "overrides": [
          {
            "files": [
              "**/*.d.ts",
            ],
            "rules": {
              "@typescript-eslint/no-unused-vars": "off",
            },
          },
          {
            "files": [
              "**/*.test-d.ts",
            ],
            "rules": {
              "@typescript-eslint/no-confusing-void-expression": "off",
              "@typescript-eslint/no-unsafe-call": "off",
            },
          },
          {
            "files": [
              "**/*.tsx",
            ],
            "rules": {
              "@typescript-eslint/naming-convention": [
                "error",
                {
                  "filter": {
                    "match": false,
                    "regex": "[- ]",
                  },
                  "format": [
                    "strictCamelCase",
                    "StrictPascalCase",
                  ],
                  "leadingUnderscore": "allowSingleOrDouble",
                  "selector": [
                    "variable",
                    "function",
                    "classProperty",
                    "objectLiteralProperty",
                    "parameterProperty",
                    "classMethod",
                    "objectLiteralMethod",
                    "typeMethod",
                    "accessor",
                  ],
                  "trailingUnderscore": "allow",
                },
                {
                  "format": [
                    "StrictPascalCase",
                  ],
                  "selector": "typeLike",
                },
                {
                  "format": [
                    "StrictPascalCase",
                  ],
                  "prefix": [
                    "is",
                    "has",
                    "can",
                    "should",
                    "will",
                    "did",
                  ],
                  "selector": "variable",
                  "types": [
                    "boolean",
                  ],
                },
                {
                  "filter": "^(?!I)[A-Z]",
                  "format": [
                    "StrictPascalCase",
                  ],
                  "selector": "interface",
                },
                {
                  "filter": "^T$|^[A-Z][a-zA-Z]+$",
                  "format": [
                    "StrictPascalCase",
                  ],
                  "selector": "typeParameter",
                },
                {
                  "format": null,
                  "modifiers": [
                    "requiresQuotes",
                  ],
                  "selector": [
                    "classProperty",
                    "objectLiteralProperty",
                  ],
                },
              ],
            },
          },
        ],
        "parser": "/Users/manaschimpidi/Code/hotcakes-core/node_modules/@typescript-eslint/parser/dist/index.js",
        "parserOptions": {
          "ecmaFeatures": {
            "jsx": true,
          },
          "project": "tsconfig.json",
          "sourceType": "module",
          "warnOnUnsupportedTypeScriptVersion": false,
        },
        "plugins": [
          "@typescript-eslint",
        ],
        "rules": {
          "@typescript-eslint/adjacent-overload-signatures": "error",
          "@typescript-eslint/array-type": [
            "error",
            {
              "default": "array-simple",
            },
          ],
          "@typescript-eslint/await-thenable": "error",
          "@typescript-eslint/ban-ts-comment": [
            "error",
            {
              "minimumDescriptionLength": 4,
              "ts-expect-error": "allow-with-description",
            },
          ],
          "@typescript-eslint/ban-tslint-comment": "error",
          "@typescript-eslint/ban-types": [
            "error",
            {
              "extendDefaults": false,
              "types": {
                "BigInt": {
                  "fixWith": "bigint",
                  "message": "Use \`bigint\` instead.",
                },
                "Boolean": {
                  "fixWith": "boolean",
                  "message": "Use \`boolean\` instead.",
                },
                "Function": "Use a specific function type instead, like \`() => void\`.",
                "Number": {
                  "fixWith": "number",
                  "message": "Use \`number\` instead.",
                },
                "Object": {
                  "fixWith": "Record<string, unknown>",
                  "message": "The \`Object\` type is mostly the same as \`unknown\`. You probably want \`Record<string, unknown>\` instead. See https://github.com/typescript-eslint/typescript-eslint/pull/848",
                },
                "String": {
                  "fixWith": "string",
                  "message": "Use \`string\` instead.",
                },
                "Symbol": {
                  "fixWith": "symbol",
                  "message": "Use \`symbol\` instead.",
                },
                "[[[[[]]]]]": "🦄💥",
                "[[[[]]]]": "ur drunk 🤡",
                "[[[]]]": "Don't use \`[[[]]]\`. Use \`SomeType[][][]\` instead.",
                "[[]]": "Don't use \`[[]]\`. It only allows an array with a single element which is an empty array. Use \`SomeType[][]\` instead.",
                "[]": "Don't use the empty array type \`[]\`. It only allows empty arrays. Use \`SomeType[]\` instead.",
                "null": {
                  "fixWith": "undefined",
                  "message": "Use \`undefined\` instead. See: https://github.com/sindresorhus/meta/issues/7",
                },
                "object": {
                  "fixWith": "Record<string, unknown>",
                  "message": "The \`object\` type is hard to use. Use \`Record<string, unknown>\` instead. See: https://github.com/typescript-eslint/typescript-eslint/pull/848",
                },
                "{}": {
                  "fixWith": "Record<string, unknown>",
                  "message": "The \`{}\` type is mostly the same as \`unknown\`. You probably want \`Record<string, unknown>\` instead.",
                },
              },
            },
          ],
          "@typescript-eslint/brace-style": [
            "error",
            "1tbs",
            {
              "allowSingleLine": false,
            },
          ],
          "@typescript-eslint/class-literal-property-style": [
            "error",
            "getters",
          ],
          "@typescript-eslint/comma-dangle": [
            "error",
            "always-multiline",
          ],
          "@typescript-eslint/comma-spacing": [
            "error",
            {
              "after": true,
              "before": false,
            },
          ],
          "@typescript-eslint/consistent-generic-constructors": [
            "error",
            "constructor",
          ],
          "@typescript-eslint/consistent-indexed-object-style": "error",
          "@typescript-eslint/consistent-type-assertions": [
            "error",
            {
              "assertionStyle": "as",
              "objectLiteralTypeAssertions": "allow-as-parameter",
            },
          ],
          "@typescript-eslint/consistent-type-definitions": [
            "error",
            "type",
          ],
          "@typescript-eslint/consistent-type-exports": [
            "error",
            {
              "fixMixedExportsWithInlineTypeSpecifier": true,
            },
          ],
          "@typescript-eslint/consistent-type-imports": [
            "error",
            {
              "fixStyle": "inline-type-imports",
            },
          ],
          "@typescript-eslint/default-param-last": "error",
          "@typescript-eslint/dot-notation": "error",
          "@typescript-eslint/func-call-spacing": [
            "error",
            "never",
          ],
          "@typescript-eslint/indent": [
            "error",
            "tab",
            {
              "SwitchCase": 1,
            },
          ],
          "@typescript-eslint/keyword-spacing": "error",
          "@typescript-eslint/lines-between-class-members": [
            "error",
            "always",
            {
              "exceptAfterSingleLine": true,
            },
          ],
          "@typescript-eslint/member-delimiter-style": [
            "error",
            {
              "multiline": {
                "delimiter": "semi",
                "requireLast": true,
              },
              "singleline": {
                "delimiter": "semi",
                "requireLast": false,
              },
            },
          ],
          "@typescript-eslint/member-ordering": [
            "error",
            {
              "default": [
                "signature",
                "public-static-field",
                "public-static-method",
                "protected-static-field",
                "protected-static-method",
                "private-static-field",
                "private-static-method",
                "static-field",
                "static-method",
                "public-decorated-field",
                "public-instance-field",
                "public-abstract-field",
                "public-field",
                "protected-decorated-field",
                "protected-instance-field",
                "protected-abstract-field",
                "protected-field",
                "private-decorated-field",
                "private-instance-field",
                "private-field",
                "instance-field",
                "abstract-field",
                "decorated-field",
                "field",
                "public-constructor",
                "protected-constructor",
                "private-constructor",
                "constructor",
                "public-decorated-method",
                "public-instance-method",
                "public-abstract-method",
                "public-method",
                "protected-decorated-method",
                "protected-instance-method",
                "protected-abstract-method",
                "protected-method",
                "private-decorated-method",
                "private-instance-method",
                "private-method",
                "instance-method",
                "abstract-method",
                "decorated-method",
                "method",
              ],
            },
          ],
          "@typescript-eslint/naming-convention": [
            "error",
            {
              "filter": {
                "match": false,
                "regex": "[- ]",
              },
              "format": [
                "strictCamelCase",
              ],
              "leadingUnderscore": "allowSingleOrDouble",
              "selector": [
                "variable",
                "function",
                "classProperty",
                "objectLiteralProperty",
                "parameterProperty",
                "classMethod",
                "objectLiteralMethod",
                "typeMethod",
                "accessor",
              ],
              "trailingUnderscore": "allow",
            },
            {
              "format": [
                "StrictPascalCase",
              ],
              "selector": "typeLike",
            },
            {
              "format": [
                "StrictPascalCase",
              ],
              "prefix": [
                "is",
                "has",
                "can",
                "should",
                "will",
                "did",
              ],
              "selector": "variable",
              "types": [
                "boolean",
              ],
            },
            {
              "filter": "^(?!I)[A-Z]",
              "format": [
                "StrictPascalCase",
              ],
              "selector": "interface",
            },
            {
              "filter": "^T$|^[A-Z][a-zA-Z]+$",
              "format": [
                "StrictPascalCase",
              ],
              "selector": "typeParameter",
            },
            {
              "format": null,
              "modifiers": [
                "requiresQuotes",
              ],
              "selector": [
                "classProperty",
                "objectLiteralProperty",
              ],
            },
          ],
          "@typescript-eslint/no-array-constructor": "error",
          "@typescript-eslint/no-base-to-string": "error",
          "@typescript-eslint/no-confusing-void-expression": "error",
          "@typescript-eslint/no-dupe-class-members": "error",
          "@typescript-eslint/no-duplicate-enum-values": "error",
          "@typescript-eslint/no-duplicate-type-constituents": "error",
          "@typescript-eslint/no-dynamic-delete": "error",
          "@typescript-eslint/no-empty-function": "error",
          "@typescript-eslint/no-empty-interface": [
            "error",
            {
              "allowSingleExtends": true,
            },
          ],
          "@typescript-eslint/no-extra-non-null-assertion": "error",
          "@typescript-eslint/no-extra-semi": "error",
          "@typescript-eslint/no-extraneous-class": [
            "error",
            {
              "allowConstructorOnly": false,
              "allowEmpty": false,
              "allowStaticOnly": false,
              "allowWithDecorator": true,
            },
          ],
          "@typescript-eslint/no-floating-promises": [
            "error",
            {
              "ignoreIIFE": true,
              "ignoreVoid": true,
            },
          ],
          "@typescript-eslint/no-for-in-array": "error",
          "@typescript-eslint/no-inferrable-types": "error",
          "@typescript-eslint/no-loop-func": "error",
          "@typescript-eslint/no-loss-of-precision": "error",
          "@typescript-eslint/no-meaningless-void-operator": "error",
          "@typescript-eslint/no-misused-new": "error",
          "@typescript-eslint/no-misused-promises": [
            "error",
            {
              "checksConditionals": true,
              "checksVoidReturn": false,
            },
          ],
          "@typescript-eslint/no-namespace": "error",
          "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
          "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
          "@typescript-eslint/no-redeclare": "error",
          "@typescript-eslint/no-require-imports": "error",
          "@typescript-eslint/no-restricted-imports": [
            "error",
            {
              "paths": [
                "error",
                "domain",
                "freelist",
                "smalloc",
                "punycode",
                "sys",
                "querystring",
                "colors",
              ],
            },
          ],
          "@typescript-eslint/no-this-alias": [
            "error",
            {
              "allowDestructuring": true,
            },
          ],
          "@typescript-eslint/no-throw-literal": [
            "error",
            {
              "allowThrowingAny": false,
              "allowThrowingUnknown": true,
            },
          ],
          "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
          "@typescript-eslint/no-unnecessary-qualifier": "error",
          "@typescript-eslint/no-unnecessary-type-arguments": "error",
          "@typescript-eslint/no-unnecessary-type-assertion": "error",
          "@typescript-eslint/no-unnecessary-type-constraint": "error",
          "@typescript-eslint/no-unsafe-argument": "error",
          "@typescript-eslint/no-unsafe-assignment": "error",
          "@typescript-eslint/no-unsafe-call": "error",
          "@typescript-eslint/no-unsafe-declaration-merging": "error",
          "@typescript-eslint/no-unsafe-enum-comparison": "error",
          "@typescript-eslint/no-unsafe-return": "error",
          "@typescript-eslint/no-unused-expressions": "error",
          "@typescript-eslint/no-useless-constructor": "error",
          "@typescript-eslint/no-useless-empty-export": "error",
          "@typescript-eslint/no-var-requires": "error",
          "@typescript-eslint/non-nullable-type-assertion-style": "error",
          "@typescript-eslint/object-curly-spacing": [
            "error",
            "never",
          ],
          "@typescript-eslint/padding-line-between-statements": [
            "error",
            {
              "blankLine": "always",
              "next": "*",
              "prev": "multiline-block-like",
            },
          ],
          "@typescript-eslint/parameter-properties": [
            "error",
            {
              "prefer": "parameter-property",
            },
          ],
          "@typescript-eslint/prefer-as-const": "error",
          "@typescript-eslint/prefer-for-of": "error",
          "@typescript-eslint/prefer-function-type": "error",
          "@typescript-eslint/prefer-includes": "error",
          "@typescript-eslint/prefer-literal-enum-member": "error",
          "@typescript-eslint/prefer-namespace-keyword": "error",
          "@typescript-eslint/prefer-nullish-coalescing": [
            "error",
            {
              "ignoreConditionalTests": false,
              "ignoreMixedLogicalExpressions": false,
              "ignoreTernaryTests": false,
            },
          ],
          "@typescript-eslint/prefer-optional-chain": "error",
          "@typescript-eslint/prefer-readonly": "error",
          "@typescript-eslint/prefer-reduce-type-parameter": "error",
          "@typescript-eslint/prefer-regexp-exec": "error",
          "@typescript-eslint/prefer-return-this-type": "error",
          "@typescript-eslint/prefer-string-starts-ends-with": "error",
          "@typescript-eslint/prefer-ts-expect-error": "error",
          "@typescript-eslint/promise-function-async": "error",
          "@typescript-eslint/quotes": [
            "error",
            "single",
          ],
          "@typescript-eslint/require-array-sort-compare": [
            "error",
            {
              "ignoreStringArrays": true,
            },
          ],
          "@typescript-eslint/restrict-plus-operands": [
            "error",
            {
              "allowAny": false,
            },
          ],
          "@typescript-eslint/restrict-template-expressions": [
            "error",
            {
              "allowNumber": true,
            },
          ],
          "@typescript-eslint/return-await": "error",
          "@typescript-eslint/semi": [
            "error",
            "always",
          ],
          "@typescript-eslint/space-before-blocks": [
            "error",
            "always",
          ],
          "@typescript-eslint/space-before-function-paren": [
            "error",
            {
              "anonymous": "always",
              "asyncArrow": "always",
              "named": "never",
            },
          ],
          "@typescript-eslint/space-infix-ops": "error",
          "@typescript-eslint/switch-exhaustiveness-check": "error",
          "@typescript-eslint/triple-slash-reference": [
            "error",
            {
              "lib": "never",
              "path": "never",
              "types": "never",
            },
          ],
          "@typescript-eslint/type-annotation-spacing": "error",
          "@typescript-eslint/unified-signatures": [
            "error",
            {
              "ignoreDifferentlyNamedParameters": true,
            },
          ],
          "brace-style": "off",
          "camelcase": "off",
          "comma-dangle": "off",
          "comma-spacing": "off",
          "default-param-last": "off",
          "dot-notation": "off",
          "func-call-spacing": "off",
          "import/named": "off",
          "import/namespace": "off",
          "indent": "off",
          "keyword-spacing": "off",
          "lines-between-class-members": "off",
          "no-array-constructor": "off",
          "no-constant-condition": "error",
          "no-dupe-class-members": "off",
          "no-duplicate-imports": "off",
          "no-empty-function": "off",
          "no-extra-parens": "off",
          "no-extra-semi": "off",
          "no-loop-func": "off",
          "no-loss-of-precision": "off",
          "no-redeclare": "off",
          "no-restricted-imports": "off",
          "no-throw-literal": "off",
          "no-undef": "off",
          "no-unused-expressions": "off",
          "no-unused-vars": "off",
          "no-useless-constructor": "off",
          "no-void": [
            "error",
            {
              "allowAsStatement": true,
            },
          ],
          "node/no-unsupported-features/es-builtins": "off",
          "node/no-unsupported-features/es-syntax": "off",
          "object-curly-spacing": "off",
          "padding-line-between-statements": "off",
          "quotes": "off",
          "semi": "off",
          "space-before-blocks": "off",
          "space-before-function-paren": "off",
          "space-infix-ops": "off",
        },
        "settings": {
          "import/parsers": {
            "/Users/manaschimpidi/Code/hotcakes-core/node_modules/@typescript-eslint/parser/dist/index.js": [
              ".ts",
              ".tsx",
            ],
          },
          "import/resolver": {
            "node": {
              "extensions": [
                ".js",
                ".jsx",
                ".ts",
                ".tsx",
              ],
            },
          },
        },
      },
    ],
    "parserOptions": {
      "ecmaFeatures": {
        "jsx": true,
      },
      "ecmaVersion": "latest",
      "sourceType": "module",
    },
    "plugins": [
      "react",
      "react-hooks",
    ],
    "reportUnusedDisableDirectives": true,
    "rules": {
      "accessor-pairs": [
        "error",
        {
          "enforceForClassMembers": true,
        },
      ],
      "array-bracket-newline": [
        "error",
        "consistent",
      ],
      "array-bracket-spacing": [
        "error",
        "never",
      ],
      "array-callback-return": [
        "error",
        {
          "allowImplicit": true,
        },
      ],
      "array-element-newline": [
        "error",
        "consistent",
      ],
      "arrow-body-style": "error",
      "arrow-parens": [
        "error",
        "as-needed",
      ],
      "arrow-spacing": [
        "error",
        {
          "after": true,
          "before": true,
        },
      ],
      "block-scoped-var": "error",
      "brace-style": [
        "error",
        "1tbs",
        {
          "allowSingleLine": false,
        },
      ],
      "camelcase": [
        "error",
        {
          "properties": "always",
        },
      ],
      "capitalized-comments": [
        "error",
        "always",
        {
          "ignoreConsecutiveComments": true,
          "ignoreInlineComments": true,
          "ignorePattern": "pragma|ignore|prettier-ignore|webpack\\\\w+:|c8|type-coverage:",
        },
      ],
      "comma-dangle": [
        "error",
        "always-multiline",
      ],
      "comma-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "comma-style": [
        "error",
        "last",
      ],
      "complexity": "warn",
      "computed-property-spacing": [
        "error",
        "never",
        {
          "enforceForClassMembers": true,
        },
      ],
      "constructor-super": "error",
      "curly": "error",
      "default-case": "error",
      "default-case-last": "error",
      "dot-location": [
        "error",
        "property",
      ],
      "dot-notation": "error",
      "eol-last": "error",
      "eqeqeq": "error",
      "for-direction": "error",
      "func-call-spacing": [
        "error",
        "never",
      ],
      "func-name-matching": [
        "error",
        {
          "considerPropertyDescriptor": true,
        },
      ],
      "func-names": [
        "error",
        "never",
      ],
      "function-call-argument-newline": [
        "error",
        "consistent",
      ],
      "generator-star-spacing": [
        "error",
        "both",
      ],
      "getter-return": "error",
      "grouped-accessor-pairs": [
        "error",
        "getBeforeSet",
      ],
      "guard-for-in": "error",
      "indent": [
        "error",
        "tab",
        {
          "SwitchCase": 1,
        },
      ],
      "jsx-quotes": [
        "error",
        "prefer-single",
      ],
      "key-spacing": [
        "error",
        {
          "afterColon": true,
          "beforeColon": false,
        },
      ],
      "keyword-spacing": "error",
      "linebreak-style": [
        "error",
        "unix",
      ],
      "lines-between-class-members": [
        "error",
        "always",
        {
          "exceptAfterSingleLine": true,
        },
      ],
      "max-depth": "warn",
      "max-nested-callbacks": [
        "warn",
        4,
      ],
      "max-params": [
        "warn",
        {
          "max": 4,
        },
      ],
      "max-statements-per-line": "error",
      "new-cap": [
        "error",
        {
          "capIsNew": true,
          "newIsCap": true,
        },
      ],
      "new-parens": "error",
      "no-alert": "error",
      "no-array-constructor": "error",
      "no-async-promise-executor": "error",
      "no-await-in-loop": "error",
      "no-bitwise": "error",
      "no-buffer-constructor": "error",
      "no-caller": "error",
      "no-case-declarations": "error",
      "no-class-assign": "error",
      "no-compare-neg-zero": "error",
      "no-cond-assign": "error",
      "no-const-assign": "error",
      "no-constant-binary-expression": "error",
      "no-constant-condition": "error",
      "no-constructor-return": "error",
      "no-control-regex": "error",
      "no-debugger": "error",
      "no-delete-var": "error",
      "no-dupe-args": "error",
      "no-dupe-class-members": "error",
      "no-dupe-else-if": "error",
      "no-dupe-keys": "error",
      "no-duplicate-case": "error",
      "no-else-return": [
        "error",
        {
          "allowElseIf": false,
        },
      ],
      "no-empty": [
        "error",
        {
          "allowEmptyCatch": true,
        },
      ],
      "no-empty-character-class": "error",
      "no-empty-pattern": "error",
      "no-empty-static-block": "error",
      "no-eq-null": "error",
      "no-eval": "error",
      "no-ex-assign": "error",
      "no-extend-native": "error",
      "no-extra-bind": "error",
      "no-extra-boolean-cast": "error",
      "no-extra-label": "error",
      "no-extra-semi": "error",
      "no-fallthrough": "error",
      "no-floating-decimal": "error",
      "no-func-assign": "error",
      "no-global-assign": "error",
      "no-implicit-coercion": "error",
      "no-implicit-globals": "error",
      "no-implied-eval": "error",
      "no-import-assign": "error",
      "no-inner-declarations": "error",
      "no-invalid-regexp": "error",
      "no-irregular-whitespace": "error",
      "no-iterator": "error",
      "no-label-var": "error",
      "no-labels": "error",
      "no-lone-blocks": "error",
      "no-lonely-if": "error",
      "no-loss-of-precision": "error",
      "no-misleading-character-class": "error",
      "no-mixed-operators": "error",
      "no-mixed-spaces-and-tabs": "error",
      "no-multi-assign": "error",
      "no-multi-spaces": "error",
      "no-multi-str": "error",
      "no-multiple-empty-lines": [
        "error",
        {
          "max": 1,
        },
      ],
      "no-negated-condition": "error",
      "no-new": "error",
      "no-new-func": "error",
      "no-new-native-nonconstructor": "error",
      "no-new-object": "error",
      "no-new-wrappers": "error",
      "no-nonoctal-decimal-escape": "error",
      "no-obj-calls": "error",
      "no-octal": "error",
      "no-octal-escape": "error",
      "no-promise-executor-return": "error",
      "no-proto": "error",
      "no-prototype-builtins": "error",
      "no-redeclare": "error",
      "no-regex-spaces": "error",
      "no-restricted-globals": [
        "error",
        "event",
      ],
      "no-restricted-imports": [
        "error",
        "domain",
        "freelist",
        "smalloc",
        "punycode",
        "sys",
        "querystring",
        "colors",
      ],
      "no-return-assign": [
        "error",
        "always",
      ],
      "no-return-await": "error",
      "no-script-url": "error",
      "no-self-assign": [
        "error",
        {
          "props": true,
        },
      ],
      "no-self-compare": "error",
      "no-sequences": "error",
      "no-setter-return": "error",
      "no-shadow-restricted-names": "error",
      "no-sparse-arrays": "error",
      "no-template-curly-in-string": "error",
      "no-this-before-super": "error",
      "no-throw-literal": "error",
      "no-trailing-spaces": "error",
      "no-undef": [
        "error",
        {
          "typeof": true,
        },
      ],
      "no-undef-init": "error",
      "no-unexpected-multiline": "error",
      "no-unmodified-loop-condition": "error",
      "no-unneeded-ternary": "error",
      "no-unreachable": "error",
      "no-unreachable-loop": "error",
      "no-unsafe-finally": "error",
      "no-unsafe-negation": [
        "error",
        {
          "enforceForOrderingRelations": true,
        },
      ],
      "no-unsafe-optional-chaining": [
        "error",
        {
          "disallowArithmeticOperators": true,
        },
      ],
      "no-unused-expressions": [
        "error",
        {
          "enforceForJSX": true,
        },
      ],
      "no-unused-labels": "error",
      "no-unused-vars": [
        "error",
        {
          "args": "after-used",
          "argsIgnorePattern": "^_",
          "caughtErrors": "all",
          "caughtErrorsIgnorePattern": "^_$",
          "ignoreRestSiblings": true,
          "vars": "all",
        },
      ],
      "no-useless-backreference": "error",
      "no-useless-call": "error",
      "no-useless-catch": "error",
      "no-useless-computed-key": [
        "error",
        {
          "enforceForClassMembers": true,
        },
      ],
      "no-useless-concat": "error",
      "no-useless-constructor": "error",
      "no-useless-escape": "error",
      "no-useless-rename": "error",
      "no-useless-return": "error",
      "no-var": "error",
      "no-void": "error",
      "no-warning-comments": "warn",
      "no-whitespace-before-property": "error",
      "no-with": "error",
      "object-curly-spacing": [
        "error",
        "never",
      ],
      "object-shorthand": [
        "error",
        "always",
        {
          "avoidExplicitReturnArrows": true,
        },
      ],
      "one-var": [
        "error",
        "never",
      ],
      "one-var-declaration-per-line": "error",
      "operator-assignment": [
        "error",
        "always",
      ],
      "operator-linebreak": [
        "error",
        "before",
      ],
      "padded-blocks": [
        "error",
        "never",
        {
          "allowSingleLineBlocks": false,
        },
      ],
      "padding-line-between-statements": [
        "error",
        {
          "blankLine": "always",
          "next": "*",
          "prev": "multiline-block-like",
        },
      ],
      "prefer-arrow-callback": [
        "error",
        {
          "allowNamedFunctions": true,
        },
      ],
      "prefer-const": [
        "error",
        {
          "destructuring": "all",
        },
      ],
      "prefer-destructuring": [
        "error",
        {
          "AssignmentExpression": {
            "array": false,
            "object": false,
          },
          "VariableDeclarator": {
            "array": false,
            "object": true,
          },
        },
        {
          "enforceForRenamedProperties": false,
        },
      ],
      "prefer-exponentiation-operator": "error",
      "prefer-numeric-literals": "error",
      "prefer-object-spread": "error",
      "prefer-promise-reject-errors": [
        "error",
        {
          "allowEmptyReject": true,
        },
      ],
      "prefer-regex-literals": [
        "error",
        {
          "disallowRedundantWrapping": true,
        },
      ],
      "prefer-rest-params": "error",
      "prefer-spread": "error",
      "quote-props": [
        "error",
        "as-needed",
      ],
      "quotes": [
        "error",
        "single",
      ],
      "radix": "error",
      "react-hooks/exhaustive-deps": "warn",
      "react-hooks/rules-of-hooks": "error",
      "react/boolean-prop-naming": [
        "error",
        {
          "validateNested": true,
        },
      ],
      "react/button-has-type": "error",
      "react/default-props-match-prop-types": "error",
      "react/function-component-definition": [
        "error",
        {
          "namedComponents": "function-declaration",
          "unnamedComponents": "arrow-function",
        },
      ],
      "react/hook-use-state": "error",
      "react/iframe-missing-sandbox": "error",
      "react/jsx-boolean-value": "error",
      "react/jsx-child-element-spacing": "error",
      "react/jsx-closing-bracket-location": [
        "error",
        {
          "nonEmpty": "tag-aligned",
          "selfClosing": false,
        },
      ],
      "react/jsx-closing-tag-location": "error",
      "react/jsx-curly-brace-presence": [
        "error",
        {
          "children": "never",
          "propElementValues": "always",
          "props": "never",
        },
      ],
      "react/jsx-curly-newline": [
        "error",
        {
          "multiline": "consistent",
          "singleline": "forbid",
        },
      ],
      "react/jsx-curly-spacing": [
        "error",
        "never",
      ],
      "react/jsx-equals-spacing": [
        "error",
        "never",
      ],
      "react/jsx-first-prop-new-line": "error",
      "react/jsx-fragments": [
        "error",
        "syntax",
      ],
      "react/jsx-indent": [
        "error",
        "tab",
        {
          "checkAttributes": true,
          "indentLogicalExpressions": true,
        },
      ],
      "react/jsx-indent-props": [
        "error",
        "tab",
      ],
      "react/jsx-key": [
        "error",
        {
          "checkFragmentShorthand": true,
          "checkKeyMustBeforeSpread": true,
          "warnOnDuplicates": true,
        },
      ],
      "react/jsx-max-props-per-line": [
        "error",
        {
          "maximum": 3,
          "when": "multiline",
        },
      ],
      "react/jsx-no-bind": [
        "error",
        {
          "allowArrowFunctions": true,
        },
      ],
      "react/jsx-no-comment-textnodes": "error",
      "react/jsx-no-constructed-context-values": "error",
      "react/jsx-no-duplicate-props": [
        "error",
        {
          "ignoreCase": true,
        },
      ],
      "react/jsx-no-script-url": "error",
      "react/jsx-no-target-blank": [
        "error",
        {
          "forms": true,
          "warnOnSpreadAttributes": true,
        },
      ],
      "react/jsx-no-undef": "error",
      "react/jsx-no-useless-fragment": "error",
      "react/jsx-pascal-case": "error",
      "react/jsx-props-no-multi-spaces": "error",
      "react/jsx-sort-props": [
        "error",
        {
          "callbacksLast": true,
          "noSortAlphabetically": true,
          "reservedFirst": true,
          "shorthandFirst": true,
        },
      ],
      "react/jsx-tag-spacing": [
        "error",
        {
          "afterOpening": "never",
          "beforeClosing": "never",
          "beforeSelfClosing": "never",
          "closingSlash": "never",
        },
      ],
      "react/jsx-uses-react": "error",
      "react/jsx-uses-vars": "error",
      "react/jsx-wrap-multilines": [
        "error",
        {
          "arrow": "parens-new-line",
          "assignment": "parens-new-line",
          "condition": "ignore",
          "declaration": "parens-new-line",
          "logical": "ignore",
          "prop": "ignore",
          "return": "parens-new-line",
        },
      ],
      "react/no-access-state-in-setstate": "error",
      "react/no-array-index-key": "error",
      "react/no-arrow-function-lifecycle": "error",
      "react/no-children-prop": "error",
      "react/no-danger": "error",
      "react/no-danger-with-children": "error",
      "react/no-deprecated": "error",
      "react/no-did-update-set-state": "error",
      "react/no-direct-mutation-state": "error",
      "react/no-find-dom-node": "error",
      "react/no-invalid-html-attribute": "error",
      "react/no-is-mounted": "error",
      "react/no-namespace": "error",
      "react/no-redundant-should-component-update": "error",
      "react/no-render-return-value": "error",
      "react/no-string-refs": [
        "error",
        {
          "noTemplateLiterals": true,
        },
      ],
      "react/no-this-in-sfc": "error",
      "react/no-typos": "error",
      "react/no-unescaped-entities": "error",
      "react/no-unknown-property": "error",
      "react/no-unsafe": "error",
      "react/no-unused-prop-types": "error",
      "react/no-unused-state": "error",
      "react/prefer-read-only-props": "error",
      "react/prop-types": "error",
      "react/react-in-jsx-scope": "error",
      "react/require-default-props": [
        "error",
        {
          "forbidDefaultForRequired": true,
          "ignoreFunctionalComponents": true,
        },
      ],
      "react/self-closing-comp": "error",
      "react/state-in-constructor": [
        "error",
        "never",
      ],
      "react/static-property-placement": "error",
      "react/style-prop-object": [
        "error",
        {
          "allow": [
            "FormattedNumber",
          ],
        },
      ],
      "react/void-dom-elements-no-children": "error",
      "require-yield": "error",
      "rest-spread-spacing": [
        "error",
        "never",
      ],
      "semi": [
        "error",
        "always",
      ],
      "semi-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "semi-style": [
        "error",
        "last",
      ],
      "space-before-blocks": [
        "error",
        "always",
      ],
      "space-before-function-paren": [
        "error",
        {
          "anonymous": "always",
          "asyncArrow": "always",
          "named": "never",
        },
      ],
      "space-in-parens": [
        "error",
        "never",
      ],
      "space-infix-ops": "error",
      "space-unary-ops": "error",
      "spaced-comment": [
        "error",
        "always",
        {
          "block": {
            "balanced": true,
            "exceptions": [
              "-",
              "+",
              "*",
            ],
            "markers": [
              "!",
              "*",
            ],
          },
          "line": {
            "exceptions": [
              "-",
              "+",
              "*",
            ],
            "markers": [
              "!",
              "/",
              "=>",
            ],
          },
        },
      ],
      "switch-colon-spacing": [
        "error",
        {
          "after": true,
          "before": false,
        },
      ],
      "symbol-description": "error",
      "template-curly-spacing": "error",
      "template-tag-spacing": [
        "error",
        "never",
      ],
      "unicode-bom": [
        "error",
        "never",
      ],
      "use-isnan": "error",
      "valid-typeof": [
        "error",
        {
          "requireStringLiterals": false,
        },
      ],
      "wrap-iife": [
        "error",
        "inside",
        {
          "functionPrototypeMethods": true,
        },
      ],
      "yield-star-spacing": [
        "error",
        "both",
      ],
      "yoda": "error",
    },
    "settings": {
      "react": {
        "version": "detect",
      },
    },
  },
}
`;
